{"version":3,"sources":["features/landing/assets/images/pikachu_phone.jpg","features/landing/assets/images/pikachu.jpg","authSlice.js","components/Navbar.js","features/landing/components/ModalSignup.js","features/landing/components/ModalLogin.js","features/landing/Landing.js","Icons/Linkedin.js","Icons/Medium.js","Icons/Twitter.js","Icons/Github.js","components/Footer.js","features/home/collectionSlice.js","features/home/UserInfo.js","Icons/Bin.js","features/home/components/pokeTypeColor.js","features/home/components/CollectionCard.js","features/home/Collection.js","features/explore/pokemonCardsSlice.js","features/home/Home.js","features/explore/SearchPokemon.js","features/explore/components/pokeTypeColor.js","features/explore/components/PokeDetailsUI.js","features/explore/components/PokemonCard.js","features/explore/PokemonCards.js","features/explore/Explore.js","features/find/findSlice.js","features/find/components/UploadImageComponent.js","features/find/components/CaptureImageComponent.js","features/find/components/InputListButton.js","features/find/ImageInput.js","features/find/utils/classIdxDict.js","features/find/utils/getTopKPred.js","features/find/components/pokeTypeColor.js","features/find/components/PokeDetailsUI.js","features/find/components/PokemonCardML.js","features/find/SearchOutput.js","features/find/Find.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["module","exports","authSlice","createSlice","name","initialState","isUserLoggedIn","username","reducers","login","state","action","user","payload","alert","logout","window","localStorage","removeItem","signup","tryAutoLogin","dispatch","a","axios","get","headers","getItem","autoLoginResponse","token","data","console","log","selectorAuth","auth","actions","Navbar","authState","useSelector","useDispatch","to","onClick","ModalSignup","props","signupModalBool","setSignupModalBool","useState","setUsername","password","setPassword","history","useHistory","from","useLocation","pathname","onSubmit","e","preventDefault","post","response","setItem","msg","message","trySignup","replace","value","onChange","target","placeholder","type","ModalLogin","loginModalBool","setLoginModalBool","tryLogin","ButtonBase","styled","button","Landing","imageUrl","innerWidth","desktop_wallpaper","mobile_phone_wallpaper","css","SvgLinkedin","height","viewBox","width","d","SvgMedium","SvgTwitter","SvgGithub","Footer","href","Linkedin","Medium","Github","Twitter","collectionSlice","collectionList","setInitialCollection","create","push","collectionId","collectionName","pokemons","addPoke","collectionListIndex","findIndex","x","find","c","poke","pokeName","pokeUrl","pokeType","remove","collectionIdToRemove","collectionIdRemoveIndex","col","splice","edit","collectionIdToEdit","editedName","editedPokemonList","pokemonList","collectionIdEditIndex","addPokemon","pokeObj","selectorCollection","collection","add","UserInfo","dateTime","Date","ye","Intl","DateTimeFormat","year","format","mo","month","da","day","collections","numPokemon","reduce","accumulator","length","pokemonWeightsArray","map","pokeWeight","minPokemonWeight","Math","min","maxPokemonWeight","max","pokemonHeightsArray","pokeHeight","minPokemonHeight","maxPokemonHeight","Info","p","SvgBin","PokeTypeColorElement","color","generatePokeTypeColor","CollectionCard","collectionObj","setCollectionName","isEdit","setIsEdit","setPokemonList","handleRemoveCollection","removeCollection","handleEditToggle","handleSave","editCollection","newCollectionName","key","src","newPokemonList","filter","handleRemovePokemon","Collection","collectionState","useEffect","getState","newCollection","uuidv4","pokeCollection","URL","pokemonCardsSlice","filteredPokemonList","arr","val","existingPokeIds","id","some","arrVal","search","searchTerm","filteredList","toLowerCase","includes","fetchPokemonNameUrl","pokemon","results","url","responseDetails","tempDetails","species","baseExperience","base_experience","weight","types","sprites","front_default","selectorPokemon","selectorFilteredPokemon","Home","SearchPokemon","setSearchTerm","PokeDetailsUI","keyAttribute","PokemonCard","currentCollection","setCurrentCollection","pokemonId","pokemonName","pokemonType","pokemonHeight","pokemonWeight","pokemonBaseExperience","pokemonSprite","alt","pokeId","PokemonCards","Explore","findSlice","uploadedImage","matchesFound","storeInputImage","storePredictions","predictions","selectorFind","UploadImageComponent","createObjectURL","files","CaptureImageComponent","webcamRef","useRef","capture","useCallback","imageSrc","current","getScreenshot","audio","ref","screenshotFormat","videoConstraints","facingMode","InputListButton","activeButton","others","ImageInput","inputType","setInputType","idx2class","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","getTopKPredPokeObj","pred","k","pokeObjList","foundPokeObj","predIdx","predNames","sort","b","slice","i","indexOf","getTopKPred","obj","pokeObjFromName","PokemonCardML","SearchOutput","findState","pokemonState","imageRef","model","setModel","tf","localClassifierModel","classifierModel","save","fetchModel","imgTensor","fromPixels","resizeNearestNeighbor","toFloat","sub","div","expandDims","predict","y_pred","topkPredNames","makePredictions","Find","ProtectedRoute","Component","component","rest","render","location","AuthRoute","App","exact","path","configureStore","reducer","collectionReducer","pokemonCardsReducer","authReducer","findReducer","Boolean","hostname","match","ReactDOM","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.0f303b5b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pikachu_phone.f70615ac.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pikachu.486d6ae6.jpg\";","import { createSlice } from \"@reduxjs/toolkit\"\nimport axios from \"axios\"\n\nconst initialState = {\n  isUserLoggedIn: false,\n  username: \"\",\n}\n\nexport const authSlice = createSlice({\n  name: \"auth\",\n  initialState: initialState,\n  reducers: {\n    login: (state, action) => {\n      const user = action.payload\n\n      if (!user) return alert(\"Login failed. Incorrect username or password.\")\n\n      state.username = user.username\n      state.isUserLoggedIn = true\n    },\n    logout: (state, action) => {\n      state.username = \"\"\n      state.isUserLoggedIn = false\n      window.localStorage.removeItem(\"token\")\n    },\n    signup: (state, action) => {\n      const user = action.payload\n\n      if (!user) return alert(\"Sign up failed. Please try again.\")\n\n      state.username = user.username\n      state.isUserLoggedIn = true\n    },\n  },\n})\n\n// window.localStorage.setItem(\n//   \"token\",\n//   autoLoginResponse.headers[\"auth-token\"]\n// )\n\nexport const tryAutoLogin = () => {\n  return async dispatch => {\n    try {\n      const autoLoginResponse = await axios.get(\"/api/auth/autologin\", {\n        headers: { \"auth-token\": window.localStorage.getItem(\"token\") },\n      })\n\n      if (autoLoginResponse) {\n        const user = {\n          token: autoLoginResponse.headers[\"auth-token\"],\n          username: autoLoginResponse.data.username,\n        }\n\n        dispatch(login(user))\n      }\n    } catch (e) {\n      console.log(e)\n    }\n  }\n}\n\nexport const tryLogin = (username, password) => {\n  return async dispatch => {\n    try {\n      const response = await axios.post(\"/api/auth/login\", {\n        username: username,\n        password: password,\n      })\n\n      const user = {\n        token: response.headers[\"auth-token\"],\n        username: response.data.username,\n      }\n\n      window.localStorage.setItem(\"token\", response.headers[\"auth-token\"])\n\n      dispatch(login(user))\n    } catch (e) {\n      alert(\"Incorrect Username/Password.\")\n    }\n  }\n}\n\nexport const trySignup = (username, password) => {\n  return async dispatch => {\n    try {\n      const response = await axios.post(\"/api/auth/signup\", {\n        username: username,\n        password: password,\n      })\n\n      const user = {\n        token: response.headers[\"auth-token\"],\n        username: response.data.username,\n      }\n\n      window.localStorage.setItem(\"token\", response.headers[\"auth-token\"])\n\n      dispatch(signup(user))\n    } catch (e) {\n      alert(e.response.data.msg[0].message)\n    }\n  }\n}\n\nexport const selectorAuth = state => state.auth\nexport const { login, logout, signup } = authSlice.actions\nexport default authSlice.reducer\n","// This is the Navbar component. It is present on all webpages.\n\n/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport tw from \"twin.macro\"\n\nimport React from \"react\"\nimport { NavLink } from \"react-router-dom\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { selectorAuth, logout } from \"../authSlice\"\n\nconst Navbar = () => {\n  const authState = useSelector(selectorAuth)\n  const dispatch = useDispatch()\n\n  const handleLogout = () => {\n    dispatch(logout())\n  }\n\n  return (\n    <div>\n      <nav tw=\"flex flex-row p-2 md:p-4 justify-between items-center text-gray-200 bg-purple-700 sm:text-lg\">\n        <NavLink tw=\"hover:text-white hover:font-semibold\" to=\"/home\">\n          <h3> PokeZoo</h3>\n        </NavLink>\n        {authState.isUserLoggedIn && (\n          <ul tw=\"flex flex-row\">\n            <li tw=\"mx-1 md:mx-2\">\n              <NavLink tw=\"hover:text-white hover:font-semibold\" to=\"/home\">\n                home\n              </NavLink>\n            </li>\n            <li tw=\"mx-1 md:mx-2\">\n              <NavLink tw=\"hover:text-white hover:font-semibold\" to=\"/explore\">\n                explore\n              </NavLink>\n            </li>\n            <li tw=\"mx-1 md:mx-2\">\n              <NavLink tw=\"hover:text-white hover:font-semibold\" to=\"/find\">\n                find\n              </NavLink>\n            </li>\n            <li tw=\"mx-1 md:mx-2\">\n              <button\n                onClick={handleLogout}\n                tw=\"p-1 text-sm rounded bg-gray-200 text-gray-900 hover:font-semibold\"\n              >\n                logout\n              </button>\n            </li>\n          </ul>\n        )}\n      </nav>\n    </div>\n  )\n}\n\nexport default Navbar\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport tw from \"twin.macro\"\n\nimport React, { useState } from \"react\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { useHistory, useLocation } from \"react-router-dom\"\nimport { trySignup } from \"../../../authSlice\"\n\nconst ModalSignup = props => {\n  const { signupModalBool, setSignupModalBool } = props\n  const [username, setUsername] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n\n  const dispatch = useDispatch()\n  let history = useHistory()\n  let location = useLocation()\n\n  let { from } = location.state || { from: { pathname: \"/\" } }\n\n  const attemptSignup = e => {\n    e.preventDefault()\n    dispatch(trySignup(username, password))\n    history.replace(from)\n  }\n\n  return (\n    <div tw=\"flex flex-col text-center h-full w-64 bg-gray-200 text-gray-900 rounded-lg shadow-lg p-2 md:p-4 lg:p-6\">\n      <div tw=\"flex flex-row justify-between\">\n        <p tw=\"text-lg\">Sign up</p>\n        <button\n          tw=\"text-sm\"\n          onClick={() => setSignupModalBool(!signupModalBool)}\n        >\n          close\n        </button>\n      </div>\n      <div tw=\"flex flex-col justify-around my-1\">\n        <form onSubmit={attemptSignup} tw=\"\">\n          <input\n            tw=\"my-1\"\n            value={username}\n            onChange={e => setUsername(e.target.value)}\n            placeholder=\"username\"\n          />\n          <input\n            tw=\"my-1\"\n            value={password}\n            onChange={e => setPassword(e.target.value)}\n            type=\"password\"\n            placeholder=\"password\"\n          />\n          <button\n            type=\"submit\"\n            tw=\"my-1 p-1 rounded bg-gray-800 text-gray-100 hover:bg-gray-900\"\n          >\n            sign up\n          </button>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default ModalSignup\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport tw from \"twin.macro\"\n\nimport React, { useState } from \"react\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { useHistory, useLocation } from \"react-router-dom\"\nimport { tryLogin } from \"../../../authSlice\"\n\nconst ModalLogin = props => {\n  const { loginModalBool, setLoginModalBool } = props\n  const [username, setUsername] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n\n  const dispatch = useDispatch()\n  let history = useHistory()\n  let location = useLocation()\n\n  let { from } = location.state || { from: { pathname: \"/\" } }\n\n  const attemptLogin = e => {\n    e.preventDefault()\n    dispatch(tryLogin(username, password))\n    history.replace(from)\n  }\n\n  return (\n    <div tw=\"flex flex-col text-center h-full w-64 bg-gray-200 text-gray-900 rounded-lg shadow-lg p-2 md:p-4 lg:p-6\">\n      <div tw=\"flex flex-row justify-between\">\n        <p tw=\"text-lg\">Login</p>\n        <button tw=\"text-sm\" onClick={() => setLoginModalBool(!loginModalBool)}>\n          close\n        </button>\n      </div>\n      <div tw=\"flex flex-col justify-around my-1\">\n        <form onSubmit={attemptLogin} tw=\"\">\n          <input\n            tw=\"my-1\"\n            value={username}\n            onChange={e => setUsername(e.target.value)}\n            placeholder=\"username\"\n          />\n          <input\n            tw=\"my-1\"\n            value={password}\n            onChange={e => setPassword(e.target.value)}\n            type=\"password\"\n            placeholder=\"password\"\n          />\n          <button\n            type=\"submit\"\n            tw=\"my-1 p-1 rounded bg-gray-800 text-gray-100 hover:bg-gray-900\"\n          >\n            log in\n          </button>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default ModalLogin\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport styled from \"@emotion/styled\"\nimport tw from \"twin.macro\"\n\nimport React, { useState, useEffect } from \"react\"\n\nimport mobile_phone_wallpaper from \"./assets/images/pikachu_phone.jpg\"\nimport desktop_wallpaper from \"./assets/images/pikachu.jpg\"\n\nimport ModalSignup from \"./components/ModalSignup\"\nimport ModalLogin from \"./components/ModalLogin\"\n\nconst ButtonBase = styled.button(\n  tw`hover:text-gray-900 hover:bg-gray-100 border border-white rounded font-semibold text-lg p-2 m-2 md:text-xl md:px-2 md:px-4 lg:text-2xl lg:py-4 lg:px-6`\n)\n\nconst Landing = () => {\n  const [loginModalBool, setLoginModalBool] = useState(false)\n  const [signupModalBool, setSignupModalBool] = useState(false)\n\n  const imageUrl =\n    window.innerWidth >= 650 ? desktop_wallpaper : mobile_phone_wallpaper\n\n  return (\n    <div\n      css={[\n        tw`flex flex-1 flex-col items-center justify-around h-screen w-full`,\n        css`\n          background: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)),\n            url(${imageUrl});\n          ${tw`bg-auto bg-cover bg-center bg-no-repeat`}\n        `,\n      ]}\n    >\n      <div>\n        <h1 tw=\"text-white text-4xl md:text-4xl lg:text-6xl font-bold\">\n          PokeZoo\n        </h1>\n      </div>\n      <div tw=\"flex flex-col text-white\">\n        {signupModalBool === true ? (\n          <ModalSignup\n            signupModalBool={signupModalBool}\n            setSignupModalBool={setSignupModalBool}\n          />\n        ) : loginModalBool === true ? (\n          <ModalLogin\n            loginModalBool={loginModalBool}\n            setLoginModalBool={setLoginModalBool}\n          />\n        ) : (\n          <div>\n            <ButtonBase onClick={() => setLoginModalBool(!loginModalBool)}>\n              log in\n            </ButtonBase>\n            <ButtonBase onClick={() => setSignupModalBool(!signupModalBool)}>\n              sign up\n            </ButtonBase>\n          </div>\n        )}\n      </div>\n\n      <div></div>\n    </div>\n  )\n}\n\nexport default Landing\n","import * as React from \"react\";\n\nfunction SvgLinkedin(props) {\n  return (\n    <svg height=\"512pt\" viewBox=\"0 0 512 512\" width=\"512pt\" {...props}>\n      <path d=\"M475.074 0H36.926C16.53 0 0 16.531 0 36.926v438.148C0 495.47 16.531 512 36.926 512h438.148C495.47 512 512 495.469 512 475.074V36.926C512 16.53 495.469 0 475.074 0zM181.61 387h-62.347V199.426h62.347zm-31.172-213.188h-.406c-20.922 0-34.453-14.402-34.453-32.402 0-18.406 13.945-32.41 35.274-32.41 21.328 0 34.453 14.004 34.859 32.41 0 18-13.531 32.403-35.274 32.403zM406.423 387h-62.34V286.652c0-25.218-9.027-42.418-31.586-42.418-17.223 0-27.48 11.602-31.988 22.801-1.649 4.008-2.051 9.61-2.051 15.215V387h-62.344s.817-169.977 0-187.574h62.344v26.558c8.285-12.78 23.11-30.96 56.188-30.96 41.02 0 71.777 26.808 71.777 84.421zm0 0\" />\n    </svg>\n  );\n}\n\nexport default SvgLinkedin;\n","import * as React from \"react\";\n\nfunction SvgMedium(props) {\n  return (\n    <svg height={512} viewBox=\"0 0 24 24\" width={512} {...props}>\n      <path d=\"M7.996 21.324c0 .695-.521.982-1.098.695L.67 18.906c-.188-.089-.346-.238-.475-.447S0 18.042 0 17.837V2.61c0-.568.341-.825 1.112-.441l6.844 3.42c.099.099.026-.581.04 15.735zm.857-14.32l7.152 11.568-7.152-3.553zM24 7.245v14.079c0 .223-.062.403-.188.541-.125.138-.295.207-.509.207s-.424-.058-.629-.174l-5.906-2.939zm-.04-1.603c0 .027-1.145 1.895-3.435 5.603s-3.632 5.88-4.025 6.512l-5.223-8.469 4.339-7.039c.236-.388.72-.456 1.045-.294l7.246 3.607c.035.017.053.044.053.08z\" />\n    </svg>\n  );\n}\n\nexport default SvgMedium;\n","import * as React from \"react\";\n\nfunction SvgTwitter(props) {\n  return (\n    <svg viewBox=\"0 0 512 512\" {...props}>\n      <path d=\"M512 97.248c-19.04 8.352-39.328 13.888-60.48 16.576 21.76-12.992 38.368-33.408 46.176-58.016-20.288 12.096-42.688 20.64-66.56 25.408C411.872 60.704 384.416 48 354.464 48c-58.112 0-104.896 47.168-104.896 104.992 0 8.32.704 16.32 2.432 23.936-87.264-4.256-164.48-46.08-216.352-109.792-9.056 15.712-14.368 33.696-14.368 53.056 0 36.352 18.72 68.576 46.624 87.232-16.864-.32-33.408-5.216-47.424-12.928v1.152c0 51.008 36.384 93.376 84.096 103.136-8.544 2.336-17.856 3.456-27.52 3.456-6.72 0-13.504-.384-19.872-1.792 13.6 41.568 52.192 72.128 98.08 73.12-35.712 27.936-81.056 44.768-130.144 44.768-8.608 0-16.864-.384-25.12-1.44C46.496 446.88 101.6 464 161.024 464c193.152 0 298.752-160 298.752-298.688 0-4.64-.16-9.12-.384-13.568 20.832-14.784 38.336-33.248 52.608-54.496z\" />\n    </svg>\n  );\n}\n\nexport default SvgTwitter;\n","import * as React from \"react\";\n\nfunction SvgGithub(props) {\n  return (\n    <svg viewBox=\"0 0 512 512\" {...props}>\n      <path d=\"M256 0C115.39 0 0 115.39 0 256c0 119.988 84.195 228.984 196 256v-84.695c-11.078 2.425-21.273 2.496-32.55-.828-15.13-4.465-27.423-14.543-36.548-29.91-5.816-9.813-16.125-20.454-26.879-19.672l-2.636-29.883c23.254-1.992 43.37 14.168 55.312 34.23 5.305 8.922 11.41 14.153 19.246 16.465 7.575 2.23 15.707 1.16 25.184-2.187 2.379-18.973 11.07-26.075 17.637-36.075v-.015c-66.68-9.946-93.254-45.32-103.801-73.242-13.977-37.075-6.477-83.391 18.238-112.66.48-.571 1.348-2.063 1.012-3.106-11.332-34.23 2.476-62.547 2.984-65.55 13.078 3.866 15.203-3.892 56.809 21.386l7.191 4.32c3.008 1.793 2.063.77 5.07.543 17.372-4.719 35.684-7.324 53.727-7.558 18.18.234 36.375 2.84 54.465 7.75l2.328.234c-.203-.031.633-.149 2.035-.984 51.973-31.481 50.106-21.192 64.043-25.723.504 3.008 14.13 31.785 2.918 65.582-1.512 4.656 45.059 47.3 19.246 115.754-10.547 27.933-37.117 63.308-103.797 73.254v.015c8.547 13.028 18.817 19.957 18.762 46.832V512c111.809-27.016 196-136.012 196-256C512 115.39 396.61 0 256 0zm0 0\" />\n    </svg>\n  );\n}\n\nexport default SvgGithub;\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport tw from \"twin.macro\"\n\nimport React from \"react\"\nimport LinkedinIcon from \"../Icons/Linkedin\"\nimport MediumIcon from \"../Icons/Medium\"\nimport TwitterIcon from \"../Icons/Twitter\"\nimport GithubIcon from \"../Icons/Github\"\n\nconst Footer = () => {\n  return (\n    <div>\n      <footer tw=\"flex flex-row items-center justify-center w-full text-gray-900 bg-blue-100 text-sm mt-4\">\n        Developed by Akshaj Verma.\n        <a href=\"https://www.linkedin.com/in/akshajverma7/\">\n          <LinkedinIcon tw=\"h-3 w-3 mx-1\" />\n        </a>\n        <a href=\"https://medium.com/@theairbend3r\">\n          <MediumIcon tw=\"h-3 w-3 mx-1\" />\n        </a>\n        <a href=\"https://github.com/theairbend3r/\">\n          <GithubIcon tw=\"h-3 w-3 mx-1\" />\n        </a>\n        <a href=\"https://twitter.com/theairbend3r\">\n          <TwitterIcon tw=\"h-3 w-3 mx-1\" />\n        </a>\n      </footer>\n    </div>\n  )\n}\n\nexport default Footer\n","import { createSlice } from \"@reduxjs/toolkit\"\nimport axios from \"axios\"\n\nconst initialState = {\n  collectionList: [],\n}\n\nexport const collectionSlice = createSlice({\n  name: \"collection\",\n  initialState: initialState,\n  reducers: {\n    setInitialCollection: (state, action) => {\n      state.collectionList = action.payload\n    },\n\n    // create a collection only if the same name does not already exists.\n    create: (state, action) => {\n      if (action.payload !== \"\") {\n        state.collectionList.push({\n          collectionId: action.payload.collectionId,\n          collectionName: action.payload.collectionName,\n          pokemons: [],\n        })\n      } else {\n        alert(\"Collection name cannot be blank.\")\n      }\n    },\n    // add pokemon to a collection\n    addPoke: (state, action) => {\n      // get the index of the selected collection in the collectionList array using the collection ID.\n      const collectionListIndex = state.collectionList.findIndex(\n        x => x.collectionId === action.payload.collectionId\n      )\n\n      const collectionName = state.collectionList.find(\n        c => c.collectionId === action.payload.collectionId\n      ).name\n\n      // If collection exists, then push the pokemon in it.\n      if (collectionListIndex !== -1) {\n        if (\n          // If a pokemon with the same name already exists, do not put into the list.\n          // Instead, alert the user.\n          state.collectionList[collectionListIndex].pokemons.find(\n            poke => poke.pokeName === action.payload.pokeName\n          )\n        ) {\n          alert(\n            `${action.payload.pokeName} already exists in collection \"${collectionName}\".`\n          )\n        } else {\n          state.collectionList[collectionListIndex].pokemons.push({\n            pokeName: action.payload.pokeName,\n            pokeUrl: action.payload.pokeUrl,\n            pokeType: action.payload.pokeType,\n          })\n        }\n      }\n    },\n\n    // remove a collection.\n    remove: (state, action) => {\n      const collectionIdToRemove = action.payload.collectionId\n\n      const collectionIdRemoveIndex = state.collectionList.findIndex(\n        col => col.collectionId === collectionIdToRemove\n      )\n\n      if (collectionIdRemoveIndex !== -1) {\n        state.collectionList.splice(collectionIdRemoveIndex, 1)\n      }\n    },\n    // Edit collection name and pokemon in it.\n    edit: (state, action) => {\n      const collectionIdToEdit = action.payload.collectionId\n      const editedName = action.payload.collectionName\n      const editedPokemonList = action.payload.pokemonList\n\n      const collectionIdEditIndex = state.collectionList.findIndex(\n        col => col.collectionId === collectionIdToEdit\n      )\n\n      if (collectionIdEditIndex !== -1) {\n        state.collectionList[collectionIdEditIndex].collectionName = editedName\n        state.collectionList[collectionIdEditIndex].pokemons = editedPokemonList\n      }\n    },\n  },\n})\n\n// fetch all collections\nexport const fetchCollection = username => {\n  return async (dispatch, getState) => {\n    try {\n      const response = await axios.get(`api/collection/display/${username}`, {\n        headers: { \"auth-token\": window.localStorage.getItem(\"token\") },\n      })\n      dispatch(setInitialCollection(response.data))\n    } catch (e) {\n      console.log(e)\n    }\n  }\n}\n\n// create a collection - async\nexport const createCollection = collectionObj => {\n  return async dispatch => {\n    try {\n      const response = await axios.post(\n        \"api/collection/create\",\n        collectionObj,\n        { headers: { \"auth-token\": window.localStorage.getItem(\"token\") } }\n      )\n\n      const collectionName =\n        response.data.pokeCollection[response.data.pokeCollection.length - 1]\n          .collectionName\n\n      const collectionId =\n        response.data.pokeCollection[response.data.pokeCollection.length - 1]\n          .collectionId\n      dispatch(\n        create({ collectionId: collectionId, collectionName: collectionName })\n      )\n    } catch (e) {\n      alert(e.response.data.msg)\n      console.log(e)\n    }\n  }\n}\n\n// remove a collection - async\nexport const removeCollection = collectionObj => {\n  console.log(collectionObj)\n  return async dispatch => {\n    try {\n      const response = await axios.post(\n        \"api/collection/delete\",\n        collectionObj,\n        { headers: { \"auth-token\": window.localStorage.getItem(\"token\") } }\n      )\n      dispatch(remove({ collectionId: response.data.collectionId }))\n    } catch (e) {\n      console.log(e)\n    }\n  }\n}\n\n// add pokemon to a collection - async\nexport const addPokemon = pokeObj => {\n  return async dispatch => {\n    try {\n      const response = await axios.post(\"api/collection/addpoke\", pokeObj, {\n        headers: { \"auth-token\": window.localStorage.getItem(\"token\") },\n      })\n      dispatch(addPoke(response.data))\n    } catch (e) {\n      alert(e.response.data.msg)\n      console.log(e)\n    }\n  }\n}\n\n// edit collection -  async\nexport const editCollection = collectionObj => {\n  return async dispatch => {\n    try {\n      const response = await axios.post(\n        \"api/collection/editcollection\",\n        collectionObj,\n        {\n          headers: { \"auth-token\": window.localStorage.getItem(\"token\") },\n        }\n      )\n      dispatch(edit(response.data))\n    } catch (e) {\n      console.log(e)\n    }\n  }\n}\n\nexport const selectorCollection = state => state.collection.collectionList\nexport const {\n  setInitialCollection,\n  create,\n  add,\n  remove,\n  edit,\n  addPoke,\n} = collectionSlice.actions\nexport default collectionSlice.reducer\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport tw from \"twin.macro\"\n\nimport React from \"react\"\n\nimport { useSelector } from \"react-redux\"\nimport { useParams } from \"react-router-dom\"\n\nimport { selectorCollection } from \"./collectionSlice\"\nimport { selectorAuth } from \"../../authSlice\"\n\nconst UserInfo = () => {\n  const authState = useSelector(selectorAuth)\n\n  const dateTime = new Date()\n  const ye = new Intl.DateTimeFormat(\"en\", { year: \"numeric\" }).format(dateTime)\n  const mo = new Intl.DateTimeFormat(\"en\", { month: \"short\" }).format(dateTime)\n  const da = new Intl.DateTimeFormat(\"en\", { day: \"2-digit\" }).format(dateTime)\n\n  const collections = useSelector(selectorCollection)\n\n  // Number of Pokemon\n  const numPokemon = collections.reduce((accumulator, poke) => {\n    return accumulator + poke.pokemons.length\n  }, 0)\n\n  // Pokemon Weights\n  const pokemonWeightsArray = []\n  collections.map(col =>\n    col.pokemons.map(poke => pokemonWeightsArray.push(poke.pokeWeight))\n  )\n\n  const minPokemonWeight = Math.min(...pokemonWeightsArray)\n  const maxPokemonWeight = Math.max(...pokemonWeightsArray)\n\n  // Pokemon Height\n  const pokemonHeightsArray = []\n  collections.map(col =>\n    col.pokemons.map(poke => pokemonHeightsArray.push(poke.pokeHeight))\n  )\n\n  const minPokemonHeight = Math.min(...pokemonHeightsArray)\n  const maxPokemonHeight = Math.max(...pokemonHeightsArray)\n\n  // p component\n  const Info = tw.p`flex flex-row items-center justify-between m-1 p-2 bg-gray-800 text-gray-500 rounded text-base sm:text-lg md:text-xl lg:text-2xl`\n\n  return (\n    <div tw=\"flex flex-row justify-around items-center bg-blue-800 py-8 px-2 md:py-10 md:px-4\">\n      <section tw=\"w-1/3 text-center text-gray-100 rounded p-4 mr-1\">\n        <h3 tw=\"font-semibold text-xl sm:text-2xl md:text-3xl lg:text-4xl\">\n          Hello {authState.username}!\n        </h3>\n        <p> {`${da}-${mo}-${ye}`} </p>\n      </section>\n      <section tw=\"flex flex-1 flex-col sm:flex-row w-2/3 text-gray-100 justify-center items-center\">\n        <div tw=\"flex flex-row sm:flex-col\">\n          <Info>\n            <span tw=\"text-gray-100 font-semibold text-lg m-1 p-1 sm:mx-2 sm:text-xl md:text-2xl lg:text-4xl\">\n              {collections.length}\n            </span>\n            collections\n          </Info>\n          <Info>\n            <span tw=\"text-gray-100 font-semibold text-lg m-1 p-1 sm:mx-2 sm:text-xl md:text-2xl lg:text-4xl\">\n              {numPokemon}\n            </span>\n            pokemon\n          </Info>\n        </div>\n        {numPokemon !== 0 && (\n          <div tw=\"flex flex-col sm:flex-row\">\n            <div tw=\"flex flex-row sm:flex-col\">\n              <Info>\n                <span tw=\"text-gray-100 font-semibold text-lg m-1 p-1 sm:mx-2 sm:text-xl md:text-2xl lg:text-4xl\">\n                  {minPokemonHeight}\n                </span>\n                min height\n              </Info>\n              <Info>\n                <span tw=\"text-gray-100 font-semibold text-lg m-1 p-1 sm:mx-2 sm:text-xl md:text-2xl lg:text-4xl\">\n                  {maxPokemonHeight}\n                </span>\n                max height\n              </Info>\n            </div>\n            <div tw=\"flex flex-row sm:flex-col\">\n              <Info>\n                <span tw=\"text-gray-100 font-semibold text-lg m-1 p-1 sm:mx-2 sm:text-xl md:text-2xl lg:text-4xl\">\n                  {minPokemonWeight}\n                </span>\n                min weight\n              </Info>\n              <Info>\n                <span tw=\"text-gray-100 font-semibold text-lg m-1 p-1 sm:mx-2 sm:text-xl md:text-2xl lg:text-4xl\">\n                  {maxPokemonWeight}\n                </span>\n                max weight\n              </Info>\n            </div>\n          </div>\n        )}\n      </section>\n    </div>\n  )\n}\n\nexport default UserInfo\n","import * as React from \"react\";\n\nfunction SvgBin(props) {\n  return (\n    <svg height=\"427pt\" viewBox=\"-40 0 427 427.001\" width=\"427pt\" {...props}>\n      <path d=\"M232.398 154.703c-5.523 0-10 4.477-10 10v189c0 5.52 4.477 10 10 10 5.524 0 10-4.48 10-10v-189c0-5.523-4.476-10-10-10zm0 0M114.398 154.703c-5.523 0-10 4.477-10 10v189c0 5.52 4.477 10 10 10 5.524 0 10-4.48 10-10v-189c0-5.523-4.476-10-10-10zm0 0\" />\n      <path d=\"M28.398 127.121V373.5c0 14.563 5.34 28.238 14.668 38.05A49.246 49.246 0 0078.796 427H268a49.233 49.233 0 0035.73-15.45c9.329-9.812 14.668-23.487 14.668-38.05V127.121c18.543-4.922 30.559-22.836 28.079-41.863-2.485-19.024-18.692-33.254-37.88-33.258h-51.199V39.5a39.289 39.289 0 00-11.539-28.031A39.288 39.288 0 00217.797 0H129a39.288 39.288 0 00-28.063 11.469A39.289 39.289 0 0089.398 39.5V52H38.2C19.012 52.004 2.805 66.234.32 85.258c-2.48 19.027 9.535 36.941 28.078 41.863zM268 407H78.797c-17.098 0-30.399-14.688-30.399-33.5V128h250v245.5c0 18.813-13.3 33.5-30.398 33.5zM109.398 39.5a19.25 19.25 0 015.676-13.895A19.26 19.26 0 01129 20h88.797a19.26 19.26 0 0113.926 5.605 19.244 19.244 0 015.675 13.895V52h-128zM38.2 72h270.399c9.941 0 18 8.059 18 18s-8.059 18-18 18H38.199c-9.941 0-18-8.059-18-18s8.059-18 18-18zm0 0\" />\n      <path d=\"M173.398 154.703c-5.523 0-10 4.477-10 10v189c0 5.52 4.477 10 10 10 5.524 0 10-4.48 10-10v-189c0-5.523-4.476-10-10-10zm0 0\" />\n    </svg>\n  );\n}\n\nexport default SvgBin;\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport tw from \"twin.macro\"\nimport styled from \"@emotion/styled/macro\"\n\n// generating colours like this because twin.macro doesn't\n// support passing colours as strings\nconst generatePokeTypeColor = color => {\n  switch (color) {\n    case \"normal\":\n      return tw`bg-orange-700`\n    case \"fighting\":\n      return tw`bg-red-800`\n    case \"flying\":\n      return tw`bg-purple-600`\n    case \"poison\":\n      return tw`bg-pink-800`\n    case \"ground\":\n      return tw`bg-yellow-600`\n    case \"rock\":\n      return tw`bg-yellow-800`\n    case \"bug\":\n      return tw`bg-green-600`\n    case \"ghost\":\n      return tw`bg-purple-900`\n    case \"steel\":\n      return tw`bg-gray-600`\n    case \"fire\":\n      return tw`bg-orange-500`\n    case \"water\":\n      return tw`bg-blue-500`\n    case \"grass\":\n      return tw`bg-green-800`\n    case \"electric\":\n      return tw`bg-yellow-500`\n    case \"psychic\":\n      return tw`bg-pink-600`\n    case \"ice\":\n      return tw`bg-blue-300`\n    case \"dragon\":\n      return tw`bg-purple-400`\n    case \"dark\":\n      return tw`bg-orange-900`\n    case \"fairy\":\n      return tw`bg-pink-300`\n    case \"unknown\":\n      return tw`bg-gray-500`\n    case \"shadow\":\n      return tw`bg-gray-700`\n    default:\n      return tw`bg-white`\n  }\n}\n\n// generate a styled p tag with dynamic background colour.\nconst PokeTypeColorElement = styled.p`\n  ${({ color }) => generatePokeTypeColor(color)}\n`\nexport default PokeTypeColorElement\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport tw from \"twin.macro\"\nimport React, { useState } from \"react\"\n\nimport CloseIcon from \"../../../Icons/Bin\"\nimport PokeTypeColorElement from \"./pokeTypeColor\"\n\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { removeCollection, editCollection } from \"../collectionSlice\"\n\nimport { selectorAuth } from \"../../../authSlice\"\n\nconst CollectionCard = props => {\n  // Get the collectionObj using props for displaying pokemon in\n  // collection cards.\n  const { collectionObj } = props\n\n  const dispatch = useDispatch()\n  const authState = useSelector(selectorAuth)\n\n  // Initialise state for renaming collection.\n  const [collectionName, setCollectionName] = useState(\n    collectionObj.collectionName\n  )\n  // Edit state is initialised with a \"no\"\n  const [isEdit, setIsEdit] = useState(\"no\")\n  // Initialise state for removing pokemon from a collection.\n  const [pokemonList, setPokemonList] = useState(collectionObj.pokemons)\n\n  // Remove collection from the store.\n  const handleRemoveCollection = collectionId => {\n    dispatch(\n      removeCollection({\n        username: authState.username,\n        collectionId: collectionId,\n      })\n    )\n  }\n\n  // Toggle edit functionality of a card.\n  const handleEditToggle = () => {\n    if (isEdit === \"no\") {\n      setIsEdit(\"yes\")\n      setCollectionName(collectionObj.collectionName)\n    } else {\n      setIsEdit(\"no\")\n      setCollectionName(collectionObj.collectionName)\n      setPokemonList(collectionObj.pokemons)\n    }\n  }\n\n  // Remove pokemon from a collection.\n  const handleRemovePokemon = pokeName => {\n    const newPokemonList = pokemonList.filter(\n      poke => poke.pokeName !== pokeName\n    )\n    setPokemonList(newPokemonList)\n  }\n\n  // Rename collection.\n  const handleCollectionNameChange = e => {\n    setCollectionName(e.target.value)\n  }\n\n  // Save the changes made to a card.\n  // This involves renaming a collection and editing the pokemon list.\n  const handleSave = collectionId => {\n    dispatch(\n      editCollection({\n        collectionId: collectionId,\n        username: authState.username,\n        newCollectionName: collectionName,\n        editedPokemonList: pokemonList,\n      })\n    )\n    setIsEdit(\"no\")\n  }\n\n  return (\n    <div tw=\"flex flex-col m-1 bg-blue-800 h-full shadow-lg text-gray-100 rounded overflow-auto\">\n      {/* conditional render based on edit button. */}\n      {isEdit === \"no\" ? (\n        // if edit mode is off, then display the the collections as is.\n        <section tw=\"p-2\">\n          <div tw=\"flex flex-row justify-end mt-1\">\n            <button\n              onClick={handleEditToggle}\n              tw=\"mx-1 px-2 py-1 rounded bg-yellow-500 text-gray-800 hover:text-gray-900 hover:font-semibold text-xs sm:text-base\"\n            >\n              edit\n            </button>\n            <button\n              onClick={() => handleRemoveCollection(collectionObj.collectionId)}\n              tw=\"mx-1 px-2 py-1 rounded bg-gray-100 text-gray-800 hover:text-gray-900 hover:font-semibold text-xs sm:text-base\"\n            >\n              delete\n            </button>\n          </div>\n\n          <div tw=\"flex flex-col\">\n            <h3 tw=\"whitespace-pre-line my-1 mb-4 rounded text-center font-bold text-3xl sm:text-4xl md:text-3xl\">\n              {collectionObj.collectionName}\n            </h3>\n            <ul tw=\"grid grid-cols-2 sm:grid-cols-2 md:grid-cols-2 xl:grid-cols-2 gap-6 px-2 py-2 md:py-0\">\n              {collectionObj.pokemons.map(poke => (\n                <li\n                  key={poke.pokeName}\n                  tw=\"flex flex-row bg-gray-200 text-gray-800 p-2 rounded-lg justify-between\"\n                >\n                  <div>\n                    <img\n                      tw=\"object-contain transform sm:scale-125 h-16 w-16 sm:h-20 sm:w-20 md:h-20 md:w-20\"\n                      src={poke.pokeUrl}\n                    />\n                  </div>\n                  <div tw=\"flex flex-col items-center\">\n                    <span tw=\"text-sm sm:text-lg md:text-base font-semibold\">\n                      {poke.pokeName}\n                    </span>\n                    <PokeTypeColorElement\n                      tw=\"text-xs sm:text-sm font-semibold text-gray-100 p-1 rounded\"\n                      color={poke.pokeType}\n                    >\n                      {poke.pokeType}\n                    </PokeTypeColorElement>\n                    {/* <span tw=\"text-xs sm:text-sm\">{poke.pokeType}</span> */}\n                  </div>\n                  <div></div>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </section>\n      ) : (\n        // if edit mode is on, display an <input /> element in the place of collection name and\n        // display \"x\" buttons to delete pokemon from the collection.\n        // Also display a \"cancel\" and \"save\" button.\n        <section tw=\"p-2\">\n          <div tw=\"flex flex-row justify-end mt-1\">\n            <button\n              onClick={() => handleSave(collectionObj.collectionId)}\n              tw=\"mx-1 px-2 py-1 rounded bg-green-700 text-gray-200 hover:text-gray-100 hover:font-semibold text-xs sm:text-base\"\n            >\n              save\n            </button>\n            <button\n              onClick={handleEditToggle}\n              tw=\"mx-1 px-2 py-1 rounded bg-gray-100 text-gray-800 hover:text-gray-900 hover:font-semibold text-xs sm:text-base\"\n            >\n              cancel\n            </button>\n          </div>\n\n          <div tw=\"flex flex-col\">\n            <h3 tw=\"whitespace-pre-line my-1 mb-4 rounded text-center font-bold text-3xl sm:text-4xl md:text-3xl\">\n              <input\n                value={collectionName}\n                onChange={handleCollectionNameChange}\n                tw=\"bg-blue-800 rounded p-1 text-gray-300 border border-gray-200\"\n              />\n            </h3>\n            <ul tw=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-2 xl:grid-cols-3 gap-6 px-2 py-2 md:py-0\">\n              {pokemonList.map(poke => (\n                <li\n                  key={poke.pokeName}\n                  tw=\"flex flex-col bg-gray-200 text-gray-800 rounded-lg px-2 py-1\"\n                >\n                  <button\n                    onClick={() => handleRemovePokemon(poke.pokeName)}\n                    tw=\"text-sm text-gray-900 self-end\"\n                  >\n                    <CloseIcon tw=\"h-3 w-3 sm:h-4 sm:w-4 fill-current text-red-800\" />\n                  </button>\n                  <div tw=\"flex flex-row justify-between\">\n                    <div>\n                      <img\n                        tw=\"h-16 w-16 sm:h-20 sm:w-20 md:h-20 md:w-20\"\n                        src={poke.pokeUrl}\n                      />\n                    </div>\n                    <div tw=\"flex flex-col items-center\">\n                      <span tw=\"text-sm sm:text-lg md:text-base font-semibold\">\n                        {poke.pokeName}\n                      </span>\n                      <PokeTypeColorElement\n                        tw=\"text-xs sm:text-sm font-semibold text-gray-100 p-1 rounded\"\n                        color={poke.pokeType}\n                      >\n                        {poke.pokeType}\n                      </PokeTypeColorElement>\n                    </div>\n                    <div></div>\n                  </div>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </section>\n      )}\n    </div>\n  )\n}\n\nexport default CollectionCard\n\n{\n  /* Bin Icon by Kiranshastry => https://www.flaticon.com/authors/kiranshastry */\n}\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport tw from \"twin.macro\"\nimport { v4 as uuidv4 } from \"uuid\"\n\nimport React, { useState, useEffect } from \"react\"\n\nimport CollectionCard from \"./components/CollectionCard\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport {\n  createCollection,\n  fetchCollection,\n  selectorCollection,\n} from \"./collectionSlice\"\nimport { selectorAuth, tryAutoLogin } from \"../../authSlice\"\n\nconst Collection = () => {\n  const [collectionName, setCollectionName] = useState(\"\")\n  const dispatch = useDispatch()\n  const collectionState = useSelector(selectorCollection)\n  const authState = useSelector(selectorAuth)\n\n  // Try autologin\n  useEffect(() => {\n    dispatch(tryAutoLogin())\n  }, [dispatch])\n\n  // Fetch collection by dispatching the action with username.\n  useEffect(() => {\n    dispatch(fetchCollection(authState.username))\n  }, [dispatch, authState.username])\n\n  const handleCollectionCreation = e => {\n    e.preventDefault()\n    const newCollection = {\n      collectionId: uuidv4(),\n      collectionName: collectionName,\n      username: authState.username,\n      pokemons: [],\n    }\n\n    dispatch(createCollection(newCollection))\n    setCollectionName(\"\")\n  }\n\n  return (\n    <div tw=\"p-2 md:p-4\">\n      <section tw=\"text-base md:text-lg lg:text-xl\">\n        {/* <h3 tw=\"mx-1\"> Your Collection </h3> */}\n        <form tw=\"text-center\" onSubmit={handleCollectionCreation}>\n          <input\n            tw=\"rounded text-gray-900 border border-purple-700 p-1 m-1\"\n            value={collectionName}\n            onChange={e => setCollectionName(e.target.value)}\n            placeholder=\"enter collection name\"\n          />\n          <button\n            tw=\"bg-purple-700 hover:bg-purple-800 text-gray-200 hover:text-white rounded p-1 m-1\"\n            type=\"submit\"\n          >\n            create\n          </button>\n        </form>\n      </section>\n      <section tw=\"md:grid md:grid-cols-2 lg:grid-cols-3 md:gap-2 mt-4\">\n        {collectionState.map(col => (\n          <CollectionCard key={col.collectionId} collectionObj={col} />\n        ))}\n      </section>\n    </div>\n  )\n}\n\nexport default Collection\n","import { createSlice } from \"@reduxjs/toolkit\"\nimport axios from \"axios\"\n\n// A constant that determines how many pokemon are fetched from the API.\nexport const NUMBER_OF_POKEMON = 150\n\n// URL for the get request.\nconst URL = `https://pokeapi.co/api/v2/pokemon?limit=${NUMBER_OF_POKEMON}`\n\n// We initialize 2 arrays. pokemonList is where we store all the pokemon fetched.\n// filteredPokemonList is where we store pokemon that match the search filter.\nconst initialState = {\n  pokemonList: [],\n  filteredPokemonList: [],\n}\n\n// A function that checks if a pokemon exists in an array.\nconst pokemonExists = (arr, val) => {\n  return arr.some(arrVal => val === arrVal)\n}\n\nexport const pokemonCardsSlice = createSlice({\n  name: \"pokemonCards\",\n  initialState: initialState,\n  reducers: {\n    // Add a pokemon to the array. Pokemon is added only if it\n    // does not already exist in the state.\n    add: (state, action) => {\n      const existingPokeIds = state.pokemonList.map(poke => poke.id)\n      if (!pokemonExists(existingPokeIds, action.payload.id)) {\n        state.pokemonList.push(action.payload)\n      }\n    },\n    // Search for a pokemon in the pokemonList state. The matches are stored in the\n    // filteredPokemonList state.\n    search: (state, action) => {\n      const searchTerm = action.payload.searchTerm\n\n      // If the search term is empty, then pokemonList is\n      // returned.\n      if (searchTerm === \"\") {\n        state.filteredPokemonList = state.pokemonList\n      }\n\n      // Convert the searchTerm and existing pokemon to lowercase while searhcing.\n      const filteredList = state.pokemonList.filter(poke =>\n        poke.name.toLowerCase().includes(searchTerm.toLowerCase())\n      )\n\n      // if searchTerm is not empty and no match is found, return \"xxx\".\n      // Else return the filtered list.\n      if (searchTerm !== \"\" && filteredList.length === 0) {\n        state.filteredPokemonList = [\"xxx\"]\n      } else {\n        state.filteredPokemonList = filteredList\n      }\n    },\n  },\n})\n\nexport const { add, search } = pokemonCardsSlice.actions\n\n// Async function to fetch pokemon.\n// We only fetch pokemon if they already don't exist in the state.\n// We do this so that a request is not made everytime we go to the explore page.\nexport const fetchPokemonNameUrl = () => {\n  return async (dispatch, getState) => {\n    // get state\n    const state = getState()\n\n    try {\n      // if length of pokemonList is not equal to NUMBER_OF_POKEMON, then fetch\n      // pokemon.\n      if (state.pokemon.pokemonList.length !== NUMBER_OF_POKEMON) {\n        const response = await axios.get(URL)\n        const data = response.data.results\n\n        // create a temp object for every pokemon fetched, extract all relevant\n        // details into it, and push it into the pokemonList state.\n        data.map(async poke => {\n          const responseDetails = await axios.get(poke.url)\n\n          let tempDetails = {\n            id: responseDetails.data.id,\n            name: responseDetails.data.species.name,\n            baseExperience: responseDetails.data.base_experience,\n            height: responseDetails.data.height,\n            weight: responseDetails.data.weight,\n            type: responseDetails.data.types[0].type.name,\n            sprites: responseDetails.data.sprites.front_default,\n          }\n\n          dispatch(add(tempDetails))\n        })\n      }\n    } catch (e) {\n      console.log(\"Could not fetch data.\")\n    }\n  }\n}\n\nexport const selectorPokemon = state => state.pokemon.pokemonList\nexport const selectorFilteredPokemon = state =>\n  state.pokemon.filteredPokemonList\n\nexport default pokemonCardsSlice.reducer\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport tw from \"twin.macro\"\n\nimport Footer from \"../../components/Footer\"\n\nimport UserInfo from \"./UserInfo\"\nimport Collection from \"./Collection\"\nimport { fetchPokemonNameUrl } from \"../explore/pokemonCardsSlice\"\n\nimport { useDispatch } from \"react-redux\"\nimport { useEffect } from \"react\"\n\nconst Home = () => {\n  const dispatch = useDispatch()\n\n  // Fetch pokemon by dispatching the action.\n  useEffect(() => {\n    dispatch(fetchPokemonNameUrl())\n  }, [dispatch])\n\n  return (\n    <div tw=\"flex flex-1 flex-col h-screen justify-between bg-blue-100\">\n      <div>\n        <UserInfo />\n        <Collection />\n      </div>\n      <Footer />\n    </div>\n  )\n}\n\nexport default Home\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport tw from \"twin.macro\"\n\nimport React, { useState } from \"react\"\nimport Bin from \"../../Icons/Bin\"\n\nimport { useDispatch } from \"react-redux\"\nimport { search } from \"./pokemonCardsSlice\"\n\nconst SearchPokemon = () => {\n  const dispatch = useDispatch()\n\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  const [uploadedImage, setUploadedImage] = useState([])\n\n  // dispatch search action.\n  const handleSearchTermChange = e => {\n    setSearchTerm(e.target.value)\n    dispatch(search({ searchTerm: e.target.value }))\n  }\n\n  return (\n    <div tw=\"bg-blue-800 py-8 px-2 md:py-10 md:px-4\">\n      <section tw=\"flex flex-row justify-center\">\n        <div tw=\"mx-2 text-center\">\n          <h3 tw=\"text-gray-100 text-lg sm:text-xl md:text-2xl lg:text-3xl font-semibold\">\n            Explore\n          </h3>\n          <form>\n            <input\n              tw=\"rounded text-gray-900 border border-purple-700 p-1\"\n              value={searchTerm}\n              onChange={handleSearchTermChange}\n              placeholder=\"search pokemon\"\n            />\n          </form>\n        </div>\n      </section>\n    </div>\n  )\n}\n\nexport default SearchPokemon\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport tw from \"twin.macro\"\nimport styled from \"@emotion/styled/macro\"\n\n// generating colours like this because twin.macro doesn't\n// support passing colours as strings\nconst generatePokeTypeColor = color => {\n  switch (color) {\n    case \"normal\":\n      return tw`bg-orange-700`\n    case \"fighting\":\n      return tw`bg-red-800`\n    case \"flying\":\n      return tw`bg-purple-600`\n    case \"poison\":\n      return tw`bg-pink-800`\n    case \"ground\":\n      return tw`bg-yellow-600`\n    case \"rock\":\n      return tw`bg-yellow-800`\n    case \"bug\":\n      return tw`bg-green-600`\n    case \"ghost\":\n      return tw`bg-purple-900`\n    case \"steel\":\n      return tw`bg-gray-600`\n    case \"fire\":\n      return tw`bg-orange-500`\n    case \"water\":\n      return tw`bg-blue-500`\n    case \"grass\":\n      return tw`bg-green-800`\n    case \"electric\":\n      return tw`bg-yellow-500`\n    case \"psychic\":\n      return tw`bg-pink-600`\n    case \"ice\":\n      return tw`bg-blue-300`\n    case \"dragon\":\n      return tw`bg-purple-400`\n    case \"dark\":\n      return tw`bg-orange-900`\n    case \"fairy\":\n      return tw`bg-pink-300`\n    case \"unknown\":\n      return tw`bg-gray-500`\n    case \"shadow\":\n      return tw`bg-gray-700`\n    default:\n      return tw`bg-white`\n  }\n}\n\n// generate a styled p tag with dynamic background colour.\nconst PokeTypeColorElement = styled.p`\n  ${({ color }) => generatePokeTypeColor(color)}\n`\nexport default PokeTypeColorElement\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport tw from \"twin.macro\"\n\n// A component to display the pokemon attributes.\nconst PokeDetailsUI = props => {\n  const { keyAttribute, val } = props\n  return (\n    <p tw=\"flex flex-row justify-between my-2 p-1 bg-gray-700 rounded\">\n      <span tw=\"font-semibold text-gray-100 p-1 mx-2 rounded\">\n        {keyAttribute}\n      </span>\n      <span tw=\"font-semibold bg-gray-200 self-stretch text-gray-900 p-1 rounded\">\n        {val}\n      </span>\n    </p>\n  )\n}\n\nexport default PokeDetailsUI\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport tw from \"twin.macro\"\nimport styled from \"@emotion/styled/macro\"\n\nimport PokeTypeColorElement from \"./pokeTypeColor\"\nimport PokeDetailsUI from \"./PokeDetailsUI\"\n\nimport { useState } from \"react\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { addPokemon, selectorCollection } from \"../../home/collectionSlice\"\nimport { selectorAuth } from \"../../../authSlice\"\n\nconst PokemonCard = props => {\n  // access the collection state.\n  const collectionState = useSelector(selectorCollection)\n  const authState = useSelector(selectorAuth)\n  const dispatch = useDispatch()\n\n  const [currentCollection, setCurrentCollection] = useState({\n    username: authState.username,\n    collectionId: \"\",\n    pokemon: {\n      pokeName: \"\",\n      pokeUrl: \"\",\n      pokeType: \"\",\n      pokeHeight: 0,\n      pokeWeight: 0,\n    },\n  })\n\n  const handleChange = e => {\n    setCurrentCollection({\n      ...currentCollection,\n      username: authState.username,\n      collectionId: e.target.value,\n      pokemon: {\n        pokeName: pokemonName,\n        pokeUrl: pokemonSprite,\n        pokeType: pokemonType,\n        pokeHeight: pokemonHeight,\n        pokeWeight: pokemonWeight,\n      },\n    })\n  }\n\n  const handleSubmit = (e, pokeId) => {\n    e.preventDefault()\n    dispatch(addPokemon(currentCollection))\n    setCurrentCollection({\n      collectionId: \"\",\n      pokemon: {\n        pokeName: \"\",\n        pokeUrl: \"\",\n        pokeType: \"\",\n        pokeHeight: 0,\n        pokeWeight: 0,\n      },\n    })\n  }\n\n  // extract details to render a pokemonCard component.\n  const {\n    pokemonId,\n    pokemonName,\n    pokemonType,\n    pokemonHeight,\n    pokemonWeight,\n    pokemonBaseExperience,\n    pokemonSprite,\n  } = props\n\n  return (\n    <div tw=\"flex flex-row justify-around items-center border border-blue-800 p-2 rounded-lg overflow-x-auto\">\n      <div tw=\"flex flex-col items-center flex-wrap w-1/3 m-1\">\n        <img\n          tw=\"object-contain transform sm:scale-125 h-24 w-24 sm:h-32 sm:w-32 md:h-24 md:w-24\"\n          alt={pokemonName}\n          src={pokemonSprite}\n        />\n        <p tw=\" text-gray-900 font-extrabold text-center whitespace-normal rounded p-1 m-1\">\n          {pokemonName}\n        </p>\n\n        <PokeTypeColorElement\n          tw=\"text-center text-white font-semibold text-center whitespace-normal rounded py-1 px-2 m-1\"\n          color={pokemonType}\n        >\n          {pokemonType}\n        </PokeTypeColorElement>\n      </div>\n      <div tw=\"flex flex-col items-center w-2/3\">\n        <div>\n          <PokeDetailsUI keyAttribute=\"height\" val={pokemonHeight} />\n          <PokeDetailsUI keyAttribute=\"weight\" val={pokemonWeight} />\n          <PokeDetailsUI keyAttribute=\"base-exp\" val={pokemonBaseExperience} />\n        </div>\n        <form onSubmit={handleSubmit}>\n          <select\n            tw=\"border border-gray-900 rounded\"\n            value={currentCollection.collectionId}\n            onChange={handleChange}\n          >\n            <option value={\"NULL\"}>...</option>\n            {collectionState.map(collection => (\n              <option\n                key={`${collection.collectionId}-${pokemonId}`}\n                value={collection.collectionId}\n              >\n                {collection.collectionName}\n              </option>\n            ))}\n          </select>\n          <button\n            tw=\"rounded border border-gray-900 text-gray-900 hover:bg-gray-800 hover:font-semibold hover:text-gray-100 px-4 py-1 ml-2 mt-2\"\n            type=\"submit\"\n          >\n            add\n          </button>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default PokemonCard\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport tw from \"twin.macro\"\n\nimport PokemonCard from \"./components/PokemonCard\"\n\nimport { useState, useEffect } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport {\n  fetchPokemonNameUrl,\n  selectorFilteredPokemon,\n  selectorPokemon,\n} from \"./pokemonCardsSlice\"\n\nconst PokemonCards = () => {\n  const dispatch = useDispatch()\n  // A state array that contains all the pokemon fetched from the API.\n  const pokemonList = useSelector(selectorPokemon)\n  // A state array that contains an array of pokemon that match the search filter.\n  const filteredPokemonList = useSelector(selectorFilteredPokemon)\n\n  // Fetch pokemon by dispatching the action.\n  useEffect(() => {\n    dispatch(fetchPokemonNameUrl())\n  }, [dispatch])\n\n  return (\n    <div tw=\"p-2 md:p-4\">\n      <ul>\n        <div tw=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-2 md:gap-3 lg:gap-4\">\n          {/* If \"xxx\" is present in the 0th position of the state array, return \"No pokemon found.\" */}\n          {/* Else If \"xxx\" is not returned and the length of the state is 0, then return all the pokemon. */}\n          {/* Else return pokemon that match the search filter.*/}\n          {filteredPokemonList[0] === \"xxx\"\n            ? \"No Pokemon found.\"\n            : filteredPokemonList.length === 0\n            ? pokemonList.map(poke => (\n                <PokemonCard\n                  key={`key-${poke.id}`}\n                  pokemonId={poke.id}\n                  pokemonName={poke.name}\n                  pokemonType={poke.type}\n                  pokemonHeight={poke.height}\n                  pokemonWeight={poke.weight}\n                  pokemonBaseExperience={poke.baseExperience}\n                  pokemonSprite={poke.sprites}\n                />\n              ))\n            : filteredPokemonList.map(poke => (\n                <PokemonCard\n                  key={`key-${poke.id}`}\n                  pokemonId={poke.id}\n                  pokemonName={poke.name}\n                  pokemonType={poke.type}\n                  pokemonHeight={poke.height}\n                  pokemonWeight={poke.weight}\n                  pokemonBaseExperience={poke.baseExperience}\n                  pokemonSprite={poke.sprites}\n                />\n              ))}\n        </div>\n      </ul>\n    </div>\n  )\n}\n\nexport default PokemonCards\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport tw from \"twin.macro\"\n\nimport React from \"react\"\n\nimport Footer from \"../../components/Footer\"\nimport SearchPokemon from \"./SearchPokemon\"\nimport PokemonCards from \"./PokemonCards\"\n\nconst Explore = () => {\n  return (\n    <div tw=\"flex flex-1 flex-col h-screen justify-start bg-blue-100\">\n      <SearchPokemon />\n      <PokemonCards />\n    </div>\n  )\n}\n\nexport default Explore\n","import { createSlice } from \"@reduxjs/toolkit\"\nimport axios from \"axios\"\n\nconst initialState = {\n  uploadedImage: \"\",\n  matchesFound: [],\n}\n\nexport const findSlice = createSlice({\n  name: \"find\",\n  initialState: initialState,\n  reducers: {\n    storeInputImage: (state, action) => {\n      state.uploadedImage = action.payload.uploadedImage\n    },\n    storePredictions: (state, action) => {\n      state.matchesFound = action.payload.predictions\n    },\n  },\n})\n\nexport const selectorFind = state => state.find\nexport const { storeInputImage, storePredictions } = findSlice.actions\nexport default findSlice.reducer\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport tw from \"twin.macro\"\n\nimport React from \"react\"\n\nimport { useDispatch } from \"react-redux\"\nimport { storeInputImage } from \"../findSlice\"\n\nconst UploadImageComponent = () => {\n  const dispatch = useDispatch()\n\n  const handleImageUpload = e => {\n    dispatch(\n      storeInputImage({ uploadedImage: URL.createObjectURL(e.target.files[0]) })\n    )\n  }\n\n  return (\n    <div tw=\"text-gray-100 px-1 py-4\">\n      <input\n        onChange={handleImageUpload}\n        tw=\"rounded text-gray-200\"\n        type=\"file\"\n      />\n    </div>\n  )\n}\n\nexport default UploadImageComponent\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport tw from \"twin.macro\"\n\nimport { useState, useCallback, useRef } from \"react\"\nimport Webcam from \"react-webcam\"\nimport { useDispatch } from \"react-redux\"\nimport { storeInputImage } from \"../findSlice\"\n\nconst CaptureImageComponent = () => {\n  const webcamRef = useRef(null)\n\n  const dispatch = useDispatch()\n\n  const videoConstraints = {\n    facingMode: \"environment\",\n  }\n\n  const capture = useCallback(() => {\n    const imageSrc = webcamRef.current.getScreenshot()\n    dispatch(storeInputImage({ uploadedImage: imageSrc }))\n  }, [webcamRef])\n\n  return (\n    <div tw=\"flex flex-col items-center text-gray-100 px-1 py-4\">\n      <Webcam\n        tw=\"rounded\"\n        audio={false}\n        ref={webcamRef}\n        screenshotFormat=\"image/jpeg\"\n        videoConstraints={videoConstraints}\n      />\n      <button\n        onClick={capture}\n        tw=\"rounded border border-white text-gray-100 hover:bg-gray-100 hover:font-semibold hover:text-gray-900 px-4 py-1 mt-1\"\n        type=\"submit\"\n      >\n        capture\n      </button>\n    </div>\n  )\n}\n\nexport default CaptureImageComponent\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport tw from \"twin.macro\"\n\nimport React from \"react\"\n\nconst InputListButton = props => {\n  const { activeButton, ...others } = props\n\n  return (\n    <div>\n      {activeButton === true ? (\n        <button\n          tw=\"border-b-2 border-gray-100 font-bold text-white hover:font-semibold p-1 mx-2\"\n          {...others}\n        />\n      ) : (\n        <button tw=\"text-gray-200 hover:font-semibold p-1 mx-2\" {...others} />\n      )}\n    </div>\n  )\n}\n\nexport default InputListButton\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport tw, { styled } from \"twin.macro\"\n\nimport { useState } from \"react\"\n\n// import components\nimport UploadImageComponent from \"./components/UploadImageComponent\"\nimport CaptureImageComponent from \"./components/CaptureImageComponent\"\nimport ImageLinkComponent from \"./components/ImageLinkComponent\"\nimport InputListButton from \"./components/InputListButton\"\n\nconst ImageInput = () => {\n  const [inputType, setInputType] = useState(\"upload_image\")\n\n  return (\n    <div tw=\"text-gray-100 bg-blue-800 py-8 px-2 md:py-10 md:px-4\">\n      <section tw=\"flex flex-col\">\n        <h3 tw=\" text-lg md:text-xl text-center\">Find Pokemon by Image</h3>\n        <div tw=\"flex flex-col\">\n          <ul tw=\"flex flex-row text-gray-100 justify-center text-sm sm:text-base\">\n            <li>\n              <InputListButton\n                activeButton={inputType === \"upload_image\"}\n                onClick={() => setInputType(\"upload_image\")}\n              >\n                upload image\n              </InputListButton>\n            </li>\n            <li>\n              <InputListButton\n                activeButton={inputType === \"capture_image\"}\n                onClick={() => setInputType(\"capture_image\")}\n              >\n                capture image\n              </InputListButton>\n            </li>\n            {/* <li>\n              <InputListButton\n                activeButton={inputType === \"image_link\"}\n                onClick={() => setInputType(\"image_link\")}\n              >\n                image link\n              </InputListButton>\n            </li> */}\n          </ul>\n          <div tw=\"text-center\">\n            {inputType === \"upload_image\" ? (\n              <UploadImageComponent />\n            ) : inputType === \"capture_image\" ? (\n              <CaptureImageComponent />\n            ) : (\n              <div> CANNOT DISPLAY INPUT COMPONENTS </div>\n            )}\n          </div>\n        </div>\n      </section>\n    </div>\n  )\n}\n\n// : inputType === \"image_link\" ? (\n//   <ImageLinkComponent />\n// )\n\nexport default ImageInput\n","const idx2class = {\n  0: \"abra\",\n  1: \"mankey\",\n  2: \"geodude\",\n  3: \"nidorina\",\n  4: \"primeape\",\n  5: \"meowth\",\n  6: \"charmander\",\n  7: \"porygon\",\n  8: \"wartortle\",\n  9: \"sandshrew\",\n  10: \"ponyta\",\n  11: \"omanyte\",\n  12: \"krabby\",\n  13: \"caterpie\",\n  14: \"horsea\",\n  15: \"bulbasaur\",\n  16: \"clefairy\",\n  17: \"dewgong\",\n  18: \"pikachu\",\n  19: \"ninetales\",\n  20: \"kabutops\",\n  21: \"ekans\",\n  22: \"jigglypuff\",\n  23: \"sandslash\",\n  24: \"alakazam\",\n  25: \"clefable\",\n  26: \"pinsir\",\n  27: \"magneton\",\n  28: \"magnemite\",\n  29: \"starmie\",\n  30: \"goldeen\",\n  31: \"seaking\",\n  32: \"staryu\",\n  33: \"charmeleon\",\n  34: \"tentacool\",\n  35: \"venonat\",\n  36: \"doduo\",\n  37: \"muk\",\n  38: \"gyarados\",\n  39: \"tentacruel\",\n  40: \"magikarp\",\n  41: \"dragonite\",\n  42: \"articuno\",\n  43: \"electabuzz\",\n  44: \"onix\",\n  45: \"koffing\",\n  46: \"vaporeon\",\n  47: \"lickitung\",\n  48: \"exeggcute\",\n  49: \"weezing\",\n  50: \"aerodactyl\",\n  51: \"victreebel\",\n  52: \"vulpix\",\n  53: \"scyther\",\n  54: \"gloom\",\n  55: \"raticate\",\n  56: \"squirtle\",\n  57: \"raichu\",\n  58: \"slowbro\",\n  59: \"pidgeotto\",\n  60: \"kabuto\",\n  61: \"mrmime\",\n  62: \"metapod\",\n  63: \"nidoqueen\",\n  64: \"moltres\",\n  65: \"persian\",\n  66: \"arcanine\",\n  67: \"rapidash\",\n  68: \"fearow\",\n  69: \"chansey\",\n  70: \"nidoking\",\n  71: \"marowak\",\n  72: \"seel\",\n  73: \"zapdos\",\n  74: \"wigglytuff\",\n  75: \"slowpoke\",\n  76: \"charizard\",\n  77: \"rhydon\",\n  78: \"poliwag\",\n  79: \"ditto\",\n  80: \"blastoise\",\n  81: \"flareon\",\n  82: \"venomoth\",\n  83: \"magmar\",\n  84: \"dodrio\",\n  85: \"seadra\",\n  86: \"mew\",\n  87: \"rhyhorn\",\n  88: \"exeggutor\",\n  89: \"vileplume\",\n  90: \"dugtrio\",\n  91: \"kingler\",\n  92: \"kadabra\",\n  93: \"arbok\",\n  94: \"dragonair\",\n  95: \"weepinbell\",\n  96: \"poliwhirl\",\n  97: \"beedrill\",\n  98: \"parasect\",\n  99: \"eevee\",\n  100: \"pidgey\",\n  101: \"ivysaur\",\n  102: \"zubat\",\n  103: \"bellsprout\",\n  104: \"grimer\",\n  105: \"kakuna\",\n  106: \"gastly\",\n  107: \"psyduck\",\n  108: \"drowzee\",\n  109: \"dratini\",\n  110: \"mewtwo\",\n  111: \"weedle\",\n  112: \"golem\",\n  113: \"rattata\",\n  114: \"diglett\",\n  115: \"kangaskhan\",\n  116: \"haunter\",\n  117: \"oddish\",\n  118: \"machoke\",\n  119: \"shellder\",\n  120: \"snorlax\",\n  121: \"jynx\",\n  122: \"electrode\",\n  123: \"cubone\",\n  124: \"cloyster\",\n  125: \"nidorino\",\n  126: \"omastar\",\n  127: \"tangela\",\n  128: \"machop\",\n  129: \"voltorb\",\n  130: \"paras\",\n  131: \"spearow\",\n  132: \"poliwrath\",\n  133: \"farfetchd\",\n  134: \"golbat\",\n  135: \"growlithe\",\n  136: \"hypno\",\n  137: \"machamp\",\n  138: \"lapras\",\n  139: \"gengar\",\n  140: \"hitmonlee\",\n  141: \"venusaur\",\n  142: \"jolteon\",\n  143: \"pidgeot\",\n  144: \"hitmonchan\",\n  145: \"tauros\",\n  146: \"graveler\",\n  147: \"butterfree\",\n  148: \"golduck\",\n}\n\nexport default idx2class\n","import idx2class from \"./classIdxDict\"\n\nconst getTopKPred = (pred, k) => {\n  const predIdx = []\n  const predNames = []\n\n  const topkPred = [...pred].sort((a, b) => b - a).slice(0, k)\n\n  topkPred.map(i => predIdx.push(pred.indexOf(i)))\n  predIdx.map(i => predNames.push(idx2class[i]))\n\n  return predNames\n}\n\nconst pokeObjFromName = (pokeName, pokeObjList) => {\n  return pokeObjList.find(obj => obj.name === pokeName)\n}\n\nconst getTopKPredPokeObj = (pred, k, pokeObjList) => {\n  const foundPokeObj = []\n  const predPokeName = getTopKPred(pred, k)\n  predPokeName.map(name =>\n    foundPokeObj.push(pokeObjFromName(name, pokeObjList))\n  )\n\n  return foundPokeObj\n}\n\nexport default getTopKPredPokeObj\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport tw from \"twin.macro\"\nimport styled from \"@emotion/styled/macro\"\n\n// generating colours like this because twin.macro doesn't\n// support passing colours as strings\nconst generatePokeTypeColor = color => {\n  switch (color) {\n    case \"normal\":\n      return tw`bg-orange-700`\n    case \"fighting\":\n      return tw`bg-red-800`\n    case \"flying\":\n      return tw`bg-purple-600`\n    case \"poison\":\n      return tw`bg-pink-800`\n    case \"ground\":\n      return tw`bg-yellow-600`\n    case \"rock\":\n      return tw`bg-yellow-800`\n    case \"bug\":\n      return tw`bg-green-600`\n    case \"ghost\":\n      return tw`bg-purple-900`\n    case \"steel\":\n      return tw`bg-gray-600`\n    case \"fire\":\n      return tw`bg-orange-500`\n    case \"water\":\n      return tw`bg-blue-500`\n    case \"grass\":\n      return tw`bg-green-800`\n    case \"electric\":\n      return tw`bg-yellow-500`\n    case \"psychic\":\n      return tw`bg-pink-600`\n    case \"ice\":\n      return tw`bg-blue-300`\n    case \"dragon\":\n      return tw`bg-purple-400`\n    case \"dark\":\n      return tw`bg-orange-900`\n    case \"fairy\":\n      return tw`bg-pink-300`\n    case \"unknown\":\n      return tw`bg-gray-500`\n    case \"shadow\":\n      return tw`bg-gray-700`\n    default:\n      return tw`bg-white`\n  }\n}\n\n// generate a styled p tag with dynamic background colour.\nconst PokeTypeColorElement = styled.p`\n  ${({ color }) => generatePokeTypeColor(color)}\n`\nexport default PokeTypeColorElement\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport tw from \"twin.macro\"\n\n// A component to display the pokemon attributes.\nconst PokeDetailsUI = props => {\n  const { keyAttribute, val } = props\n  return (\n    <p tw=\"flex flex-row justify-between my-2 p-1 bg-gray-700 rounded\">\n      <span tw=\"font-semibold text-gray-100 p-1 mx-2 rounded\">\n        {keyAttribute}\n      </span>\n      <span tw=\"font-semibold bg-gray-200 self-stretch text-gray-900 p-1 rounded\">\n        {val}\n      </span>\n    </p>\n  )\n}\n\nexport default PokeDetailsUI\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport tw from \"twin.macro\"\nimport styled from \"@emotion/styled/macro\"\n\nimport PokeTypeColorElement from \"./pokeTypeColor\"\nimport PokeDetailsUI from \"./PokeDetailsUI\"\n\nimport { useState } from \"react\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { addPokemon, selectorCollection } from \"../../home/collectionSlice\"\nimport { selectorAuth } from \"../../../authSlice\"\n\nconst PokemonCardML = props => {\n  // access the collection state.\n  const collectionState = useSelector(selectorCollection)\n  const authState = useSelector(selectorAuth)\n  const dispatch = useDispatch()\n\n  const [currentCollection, setCurrentCollection] = useState({\n    username: authState.username,\n    collectionId: \"\",\n    pokemon: {\n      pokeName: \"\",\n      pokeUrl: \"\",\n      pokeType: \"\",\n      pokeHeight: 0,\n      pokeWeight: 0,\n    },\n  })\n\n  const handleChange = e => {\n    setCurrentCollection({\n      ...currentCollection,\n      username: authState.username,\n      collectionId: e.target.value,\n      pokemon: {\n        pokeName: pokemonName,\n        pokeUrl: pokemonSprite,\n        pokeType: pokemonType,\n        pokeHeight: pokemonHeight,\n        pokeWeight: pokemonWeight,\n      },\n    })\n  }\n\n  const handleSubmit = (e, pokeId) => {\n    e.preventDefault()\n    dispatch(addPokemon(currentCollection))\n    setCurrentCollection({\n      collectionId: \"\",\n      pokemon: {\n        pokeName: \"\",\n        pokeUrl: \"\",\n        pokeType: \"\",\n        pokeHeight: 0,\n        pokeWeight: 0,\n      },\n    })\n  }\n\n  // extract details to render a pokemonCard component.\n  const {\n    pokemonId,\n    pokemonName,\n    pokemonType,\n    pokemonHeight,\n    pokemonWeight,\n    pokemonBaseExperience,\n    pokemonSprite,\n  } = props\n\n  return (\n    <div tw=\"flex flex-row justify-around items-center border border-blue-800 p-2 rounded-lg overflow-x-auto\">\n      <div tw=\"flex flex-col flex-wrap w-1/3 m-1\">\n        <img\n          tw=\"object-contain transform sm:scale-125\"\n          alt={pokemonName}\n          src={pokemonSprite}\n        />\n        <p tw=\"text-lg text-gray-900 font-extrabold text-center whitespace-normal rounded p-1 m-1\">\n          {pokemonName}\n        </p>\n\n        <PokeTypeColorElement\n          tw=\"text-center text-white font-semibold text-center whitespace-normal rounded p-1 m-1\"\n          color={pokemonType}\n        >\n          {pokemonType}\n        </PokeTypeColorElement>\n      </div>\n      <div tw=\"flex flex-col items-center w-2/3\">\n        <div>\n          <PokeDetailsUI keyAttribute=\"height\" val={pokemonHeight} />\n          <PokeDetailsUI keyAttribute=\"weight\" val={pokemonWeight} />\n          <PokeDetailsUI keyAttribute=\"base-exp\" val={pokemonBaseExperience} />\n        </div>\n        <form onSubmit={handleSubmit}>\n          <select\n            tw=\"border border-gray-900 rounded\"\n            value={currentCollection.collectionId}\n            onChange={handleChange}\n          >\n            <option value={\"NULL\"}>...</option>\n            {collectionState.map(collection => (\n              <option\n                key={`${collection.collectionId}-${pokemonId}`}\n                value={collection.collectionId}\n              >\n                {collection.collectionName}\n              </option>\n            ))}\n          </select>\n          <button\n            tw=\"rounded border border-gray-900 text-gray-900 hover:bg-gray-700 hover:font-semibold hover:text-gray-100 px-4 py-1 ml-2 mt-2\"\n            type=\"submit\"\n          >\n            add\n          </button>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default PokemonCardML\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport tw from \"twin.macro\"\nimport axios from \"axios\"\nimport * as tf from \"@tensorflow/tfjs\"\n\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { selectorFind, storePredictions } from \"./findSlice\"\nimport { useEffect, useState, useRef } from \"react\"\nimport { selectorPokemon } from \"../explore/pokemonCardsSlice\"\n\nimport getTopKPredPokeObj from \"./utils/getTopKPred\"\nimport PokemonCardML from \"./components/PokemonCardML\"\n\nconst SearchOutput = () => {\n  const findState = useSelector(selectorFind)\n  const pokemonState = useSelector(selectorPokemon)\n\n  const imageRef = useRef(null)\n  const dispatch = useDispatch()\n  // const [imageRef, setImageRef] = useState(null)\n\n  // const onChangeRef = useCallback(node => {\n  //   setImageRef(node)\n  // }, [])\n\n  const [model, setModel] = useState(null)\n\n  const MODEL_HTTP_URL = \"api/pokeml/classify\"\n  const MODEL_INDEXEDDB_URL = \"indexeddb://poke-model\"\n\n  useEffect(() => {\n    async function fetchModel() {\n      try {\n        const localClassifierModel = await tf.loadLayersModel(\n          MODEL_INDEXEDDB_URL\n        )\n\n        setModel(localClassifierModel)\n        console.log(\"Model loaded from IndexedDB\")\n      } catch (e) {\n        try {\n          const classifierModel = await tf.loadLayersModel(MODEL_HTTP_URL)\n          setModel(classifierModel)\n\n          await classifierModel.save(MODEL_INDEXEDDB_URL)\n          console.log(\"Model saved to IndexedDB\")\n        } catch (e) {\n          console.log(\"Unable to load model at all: \", e)\n        }\n      }\n    }\n    fetchModel()\n  }, [])\n\n  useEffect(() => {\n    async function makePredictions() {\n      if (imageRef && model) {\n        console.log(\n          \"Uploaded Image from inside the useEffect\",\n          findState.uploadedImage\n        )\n        console.log(\"ImageRef from inside the useEffect\", imageRef.current)\n        try {\n          const imgTensor = tf.browser\n            .fromPixels(imageRef.current)\n            .resizeNearestNeighbor([160, 160])\n            .toFloat()\n            .sub(127)\n            .div(127)\n            .expandDims()\n\n          const y_pred = await model.predict(imgTensor).data()\n          console.log(y_pred)\n          console.log(pokemonState)\n\n          const topkPredNames = getTopKPredPokeObj(y_pred, 6, pokemonState)\n\n          dispatch(storePredictions({ predictions: topkPredNames }))\n\n          console.log(topkPredNames)\n\n          return topkPredNames\n        } catch (e) {\n          console.log(\"Unable to run predictions.\", e)\n        }\n      }\n    }\n    makePredictions()\n  }, [findState.uploadedImage])\n\n  return (\n    <div tw=\"flex flex-col text-center p-2 md:flex-row \">\n      <div tw=\"md:w-1/2 m-1\">\n        <h3 tw=\"bg-gray-400 mb-2 text-gray-900 font-semibold p-1 rounded\">\n          Preview Input Image\n        </h3>\n        <div tw=\"flex flex-row justify-between p-1\">\n          <div></div>\n          {console.log(\n            \"Uploaded Image from inside the useEffect\",\n            findState.uploadedImage\n          )}\n          {console.log(\"ImageRef from inside the useEffect\", imageRef.current)}\n          {findState.uploadedImage && (\n            <img\n              ref={imageRef}\n              tw=\"border border-purple-700 p-1 rounded shadow-lg\"\n              src={findState.uploadedImage}\n              width={600}\n              height={600}\n            />\n          )}\n          <div></div>\n        </div>\n      </div>\n      <div tw=\"md:w-1/2 md:h-screen m-1 text-black\">\n        <h3 tw=\"bg-gray-400 mb-2 text-gray-900 font-semibold p-1 rounded\">\n          Search Results (top-6 matches)\n        </h3>\n        <div tw=\"grid grid-cols-1 sm:grid-cols-1 lg:grid-cols-2 gap-2 p-1\">\n          {findState.matchesFound.length === 6 &&\n            findState.matchesFound.map(poke => (\n              <PokemonCardML\n                key={`key-${poke.id}`}\n                pokemonId={poke.id}\n                pokemonName={poke.name}\n                pokemonType={poke.type}\n                pokemonHeight={poke.height}\n                pokemonWeight={poke.weight}\n                pokemonBaseExperience={poke.baseExperience}\n                pokemonSprite={poke.sprites}\n              />\n            ))}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default SearchOutput\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport tw from \"twin.macro\"\n\nimport Footer from \"../../components/Footer\"\nimport ImageInput from \"./ImageInput\"\nimport SearchOutput from \"./SearchOutput\"\n\nconst Find = () => {\n  return (\n    <div tw=\"flex flex-1 flex-col h-screen justify-start bg-blue-100 overflow-y-auto\">\n      <ImageInput />\n      <SearchOutput />\n    </div>\n  )\n}\n\nexport default Find\n","/** @jsx jsx */\r\n/** @jsxFrag React.Fragment */\r\nimport { jsx, css } from \"@emotion/core\"\r\nimport tw from \"twin.macro\"\r\nimport \"tailwindcss/dist/base.css\"\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n  useLocation,\r\n} from \"react-router-dom\"\r\n\r\nimport { selectorAuth, tryAutoLogin } from \"./authSlice\"\r\n\r\nimport { useEffect } from \"react\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\n\r\nimport Navbar from \"./components/Navbar\"\r\nimport Landing from \"./features/landing/Landing\"\r\nimport Home from \"./features/home/Home\"\r\nimport Explore from \"./features/explore/Explore\"\r\nimport Find from \"./features/find/Find\"\r\n\r\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\r\n  const authState = useSelector(selectorAuth)\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        if (authState.isUserLoggedIn) {\r\n          return <Component {...props} />\r\n        } else {\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/\",\r\n                state: {\r\n                  from: props.location,\r\n                },\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nconst AuthRoute = ({ component: Component, ...rest }) => {\r\n  const authState = useSelector(selectorAuth)\r\n\r\n  const location = useLocation()\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        if (!authState.isUserLoggedIn) {\r\n          return <Component {...props} />\r\n        } else {\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/home\",\r\n                state: {\r\n                  from: location,\r\n                },\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(tryAutoLogin())\r\n  }, [dispatch])\r\n\r\n  return (\r\n    <Router>\r\n      <div tw=\"flex flex-col min-h-screen\">\r\n        <Navbar />\r\n        <Switch>\r\n          <AuthRoute exact path=\"/\" component={Landing} />\r\n          <ProtectedRoute path=\"/home\" component={Home} />\r\n          <ProtectedRoute path=\"/explore\" component={Explore} />\r\n          <ProtectedRoute path=\"/find\" component={Find} />\r\n          <Route path=\"*\" component={() => \"404 Not found.\"} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { configureStore } from \"@reduxjs/toolkit\"\r\nimport collectionReducer from \"../features/home/collectionSlice\"\r\nimport pokemonCardsReducer from \"../features/explore/pokemonCardsSlice\"\r\nimport findReducer from \"../features/find/findSlice\"\r\nimport authReducer from \"../authSlice\"\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    collection: collectionReducer,\r\n    pokemon: pokemonCardsReducer,\r\n    auth: authReducer,\r\n    find: findReducer,\r\n  },\r\n})\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport App from \"./App\"\r\nimport store from \"./app/store\"\r\nimport { Provider } from \"react-redux\"\r\nimport * as serviceWorker from \"./serviceWorker\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}