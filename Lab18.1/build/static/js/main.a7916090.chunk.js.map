{"version":3,"sources":["components/quotes/QuoteForm.module.css","components/layout/MainNavigation.module.css","components/quotes/QuoteDetail.module.css","components/quotes/QuoteList.module.css","components/layout/Layout.module.css","components/quotes/QuoteItem.module.css","components/UI/Card.module.css","components/UI/LoadingSpinner.module.css","components/NotFound.module.css","store/quotesSlice.js","store/store.js","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/quotes/Quotes.js","components/quotes/QuoteDetail.js","hooks/use-http.js","components/UI/Card.js","components/UI/LoadingSpinner.js","hooks/use-input.js","components/quotes/QuoteForm.js","components/quotes/NewQuote.js","components/layout/MainNavigation.js","components/layout/Layout.js","components/NotFound.js","App.js","index.js"],"names":["module","exports","quotesSlice","createSlice","name","initialState","reducers","addQuote","state","action","push","payload","initQuotes","sortQuotes","sort","a","b","text","localeCompare","reverseQuotes","reverse","actions","reducer","store","configureStore","quotes","quotesReducer","QuoteItem","props","_jsxs","className","classes","item","children","_jsx","author","Link","to","concat","id","QuoteList","dispatch","useDispatch","useSelector","_useState","useNavigate","useState","_useState2","_slicedToArray","sortAscending","setSortAscending","_useSearchParams","useSearchParams","_useSearchParams2","setSort","Fragment","sorting","onClick","preState","list","map","quote","Quotes","QuoteDetail","params","useParams","quoteIndex","findIndex","quoteId","useHttp","isLoading","setIsLoading","_useState3","_useState4","error","setError","sendRequest","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","requestConfig","addTask","response","data","wrap","_context","prev","next","fetch","url","method","headers","body","JSON","stringify","sent","ok","Error","json","t0","console","log","stop","_x","_x2","apply","arguments","Card","card","LoadingSpinner","spinner","value","isTouch","useInput","validateValue","_useReducer","useReducer","type","_useReducer2","inputValid","hasError","inputValue","inputBlurHandler","inputChangeHandler","event","target","reset","inputValidate","QuoteForm","authorInputRef","useRef","textInputRef","_useInput","authorInputValue","authorHasError","authorValid","authorBlurHandler","authorChangeHandler","authorReset","_useInput2","textInputValue","textHasError","textValid","textBlurHandler","textChangeHandler","textReset","formValid","form","onSubmit","preventDefault","enteredAuthor","current","enteredText","onAddQuote","loading","control","htmlFor","onChange","onBlur","ref","rows","disabled","NewQuote","_useHttp","addQuoteRequest","addedQuote","process","bind","MainNavigation","styles","header","logo","nav","NavLink","isActive","active","undefined","_ref2","Layout","main","container","Outlet","NotFound","notfound","App","setQuotes","getQuoteRequest","config","useEffect","_loop","_objectSpread","key","_toConsumableArray","initState","router","createBrowserRouter","path","element","Navigate","errorElement","RouterProvider","rootElement","document","getElementById","createRoot","render","Provider"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,2BAA2B,QAAU,2BAA2B,QAAU,2BAA2B,aAAa,8B,qBCA7KD,EAAOC,QAAU,CAAC,OAAS,+BAA+B,KAAO,6BAA6B,IAAM,4BAA4B,OAAS,+B,qBCAzID,EAAOC,QAAU,CAAC,OAAS,4BAA4B,KAAO,0BAA0B,KAAO,0B,qBCA/FD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,2B,qBCA3DD,EAAOC,QAAU,CAAC,KAAO,qBAAqB,UAAY,0B,qBCA1DD,EAAOC,QAAU,CAAC,KAAO,wB,qBCAzBD,EAAOC,QAAU,CAAC,KAAO,mB,qBCAzBD,EAAOC,QAAU,CAAC,QAAU,gC,qBCA5BD,EAAOC,QAAU,CAAC,SAAW,2B,4ECAhBC,EAAcC,YAAY,CACnCC,KAAM,SACNC,aAAc,GACdC,SAAU,CACNC,SAAU,SAACC,EAAOC,GACdD,EAAME,KAAKD,EAAOE,QACtB,EACAC,WAAY,SAACJ,EAAOC,GAChB,OAAOA,EAAOE,OAClB,EACAE,WAAY,SAACL,EAAOC,GAChB,OAAOD,EAAMM,MAAK,SAACC,EAAGC,GAAC,OAAKD,EAAEE,KAAKC,cAAcF,EAAEC,KAAK,GAC5D,EACAE,cAAe,SAACX,EAAOC,GACnB,OAAOD,EAAMY,SACjB,KAKAC,EAAqBnB,EAArBmB,QAASC,EAAYpB,EAAZoB,QAEFV,EAAoDS,EAApDT,WAAYO,EAAwCE,EAAxCF,cAAeZ,EAAyBc,EAAzBd,SAAUM,EAAeQ,EAAfR,WACrCS,ICpBAC,EADDC,YAAe,CAAEF,QAAS,CAAEG,OAAQC,K,6DCenCC,EAhBG,SAACC,GACjB,OACEC,eAAA,MAAIC,UAAWC,IAAQC,KAAKC,SAAA,CAC1BJ,eAAA,UAAAI,SAAA,CACEC,cAAA,cAAAD,SACEC,cAAA,KAAAD,SAAIL,EAAMX,SAEZiB,cAAA,cAAAD,SAAaL,EAAMO,YAErBD,cAACE,IAAI,CAACC,GAAE,WAAAC,OAAaV,EAAMW,IAAMT,UAAU,MAAKG,SAAC,sBAKvD,E,iBCyBeO,EAlCG,SAACZ,GACjB,IAAMa,EAAWC,cACXjB,EAASkB,aAAY,SAAAnC,GAAK,OAAIA,EAAMiB,MAAM,IAEhDmB,GADiBC,cACyBC,oBAAS,IAAMC,EAAAC,YAAAJ,EAAA,GAAlDK,EAAaF,EAAA,GAAEG,EAAgBH,EAAA,GACtCI,EAAwBC,YAAgB,CAAC,GAAEC,EAAAL,YAAAG,EAAA,GAA9BG,GAAFD,EAAA,GAASA,EAAA,IAQpB,OACExB,eAAC0B,WAAQ,CAAAtB,SAAA,CACPC,cAAA,OAAKJ,UAAWC,IAAQyB,QAAQvB,SAC9BJ,eAAA,UAAQ4B,QAVM,WAElBP,GAAiB,SAACQ,GAAQ,OAAMA,CAAQ,IACxCJ,EAAQ,CAAExC,KAAMmC,EAAgB,MAAQ,SACxCR,EAAStB,IACX,EAKmCc,SAAA,CAAC,QACtBgB,EAAgB,YAAc,kBAGxCf,cAAA,MAAIJ,UAAWC,IAAQ4B,KAAK1B,SACzBR,EAAOmC,KAAI,SAACC,GAAK,OAChB3B,cAACP,EAAS,CAERY,GAAIsB,EAAMtB,GACVJ,OAAQ0B,EAAM1B,OACdlB,KAAM4C,EAAM5C,MAHP4C,EAAMtB,GAIX,QAKZ,EC7BeuB,EARA,SAAClC,GAEd,OACEM,cAACqB,WAAQ,CAAAtB,SACPC,cAACM,EAAS,KAGhB,E,iBCOeuB,EAZK,WAClB,IAAMC,EAASC,cACTxC,EAASkB,aAAY,SAAAnC,GAAK,OAAIA,EAAMiB,MAAM,IAC1CyC,EAAazC,EAAO0C,WAAU,SAACN,GAAK,OAAKA,EAAMtB,KAAOyB,EAAOI,OAAO,IAE1E,OACEvC,eAAA,OAAKC,UAAWC,IAAQC,KAAKC,SAAA,CAC3BC,cAAA,OAAKJ,UAAWC,IAAQI,OAAOF,SAAER,EAAOyC,GAAY/B,SACpDD,cAAA,OAAKJ,UAAWC,IAAQd,KAAKgB,SAAGR,EAAOyC,GAAYjD,SAGzD,E,cCiBeoD,EA9BC,WACd,IAAAzB,EAAkCE,oBAAS,GAAMC,EAAAC,YAAAJ,EAAA,GAA1C0B,EAASvB,EAAA,GAAEwB,EAAYxB,EAAA,GAC9ByB,EAA0B1B,oBAAS,GAAM2B,EAAAzB,YAAAwB,EAAA,GAAlCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAEhBG,EAAcC,sBAAW,eAAAC,EAAAC,YAAAC,cAAAC,MAAC,SAAAC,EAAOC,EAAeC,GAAO,IAAAC,EAAAC,EAAA,OAAAN,cAAAO,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACxC,OAAnBnB,GAAa,GAAMiB,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEMC,MAAMR,EAAcS,IAAK,CAC9CC,OAAQV,EAAcU,OAASV,EAAcU,OAAS,MACtDC,QAASX,EAAcW,QAAUX,EAAcW,QAAU,CAAC,EAC1DC,KAAMZ,EAAcY,KAAOC,KAAKC,UAAUd,EAAcY,MAAQ,OAC/D,KAAD,EAJY,IAARV,EAAQG,EAAAU,MAKAC,GAAG,CAADX,EAAAE,KAAA,QACC,MAAff,GAAS,GACH,IAAIyB,MAAM,yBAAyB,KAAD,SAAAZ,EAAAE,KAAA,GAEvBL,EAASgB,OAAO,KAAD,GAA5Bf,EAAIE,EAAAU,KACV3B,GAAa,GACba,EAAQE,GAAME,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAc,GAAAd,EAAA,SAEde,QAAQC,IAAGhB,EAAAc,IACX3B,GAAS,GAAM,yBAAAa,EAAAiB,OAAA,GAAAvB,EAAA,mBAElB,gBAAAwB,EAAAC,GAAA,OAAA7B,EAAA8B,MAAA,KAAAC,UAAA,EAnB8B,GAmB5B,IACH,MAAO,CACLvC,YACAI,QACAE,cAEJ,E,iBCzBekC,EAJF,SAAClF,GACZ,OAAOM,cAAA,OAAKJ,UAAWC,IAAQgF,KAAK9E,SAAEL,EAAMK,UAC9C,E,iBCEe+E,EAJQ,WACrB,OAAO9E,cAAA,OAAKJ,UAAWC,IAAQkF,SACjC,E,iBCHM5G,EAAe,CAAE6G,MAAO,GAAIC,SAAS,GAsC5BC,EApCE,SAACC,GAChB,IAYAC,EAA0BC,sBAZL,SAAC/G,EAAOC,GAC3B,MAAoB,WAAhBA,EAAO+G,KACF,CAAEN,MAAOzG,EAAOyG,MAAOC,QAAS3G,EAAM2G,SAE3B,SAAhB1G,EAAO+G,KACF,CAAEL,SAAS,EAAMD,MAAO1G,EAAM0G,OAEnB,UAAhBzG,EAAO+G,KACF,CAAEN,MAAO,GAAIC,SAAS,QAD/B,CAGF,GAEmD9G,GAAaoH,EAAAzE,YAAAsE,EAAA,GAAzD9G,EAAKiH,EAAA,GAAEhF,EAAQgF,EAAA,GAChBC,EAAaL,EAAc7G,EAAM0G,OACjCS,GAAYD,GAAclH,EAAM2G,QAYtC,MAAO,CACLS,WAAYpH,EAAM0G,MAClBS,WACAD,WAAYA,EACZG,iBAXuB,WACvBtB,QAAQC,IAAI,QACZ/D,EAAS,CAAE+E,KAAM,QACnB,EASEM,mBAhByB,SAACC,GAC1BxB,QAAQC,IAAI,UACZ/D,EAAS,CAAE+E,KAAM,SAAUN,MAAOa,EAAMC,OAAOd,OACjD,EAcEe,MATY,WACZxF,EAAS,CAAE+E,KAAM,SACnB,EASF,EChCMU,EAAgB,SAAChB,GAAK,MAAc,IAATA,CAAY,EAsF9BiB,EArFG,SAACvG,GACjB,IAAMwG,EAAiBC,mBACjBC,EAAeD,mBAErBE,EAOInB,EAASc,GANCM,EAAgBD,EAA5BX,WACUa,EAAcF,EAAxBZ,SACYe,EAAWH,EAAvBb,WACkBiB,EAAiBJ,EAAnCV,iBACoBe,EAAmBL,EAAvCT,mBACOe,EAAWN,EAAlBN,MAEFa,EAOI1B,EAASc,GANCa,EAAcD,EAA1BlB,WACUoB,EAAYF,EAAtBnB,SACYsB,EAASH,EAArBpB,WACkBwB,EAAeJ,EAAjCjB,iBACoBsB,EAAiBL,EAArChB,mBACOsB,EAASN,EAAhBb,MAEEoB,GAAY,EAgBhB,OAfIX,GAAeO,IAAWI,GAAY,GAgBxCnH,cAAC4E,EAAI,CAAA7E,SACHJ,eAAA,QAAMC,UAAWC,IAAQuH,KAAMC,SAhBnC,SAA2BxB,GACzBA,EAAMyB,iBAEN,IAAMC,EAAgBrB,EAAesB,QAAQxC,MACvCyC,EAAcrB,EAAaoB,QAAQxC,MAIzCtF,EAAMgI,WAAWH,EAAeE,GAChCd,IACAO,GAEF,EAI+DnH,SAAA,CACxDL,EAAM0C,WACLpC,cAAA,OAAKJ,UAAWC,IAAQ8H,QAAQ5H,SAC9BC,cAAC8E,EAAc,MAInBnF,eAAA,OAAKC,UAAWC,IAAQ+H,QAAQ7H,SAAA,CAC9BC,cAAA,SAAO6H,QAAQ,SAAQ9H,SAAC,WACvBwG,GACCvG,cAAA,OAAKJ,UAAWC,IAAQ,cAAcE,SAAC,2BAEzCC,cAAA,SACEgF,MAAOsB,EACPwB,SAAUpB,EACVqB,OAAQtB,EACRnB,KAAK,OACLjF,GAAG,SACH2H,IAAK9B,OAGTvG,eAAA,OAAKC,UAAWC,IAAQ+H,QAAQ7H,SAAA,CAC9BC,cAAA,SAAO6H,QAAQ,OAAM9H,SAAC,SACrB+G,GACC9G,cAAA,OAAKJ,UAAWC,IAAQ,cAAcE,SAAC,8BAIzCC,cAAA,YACEgF,MAAO6B,EACPiB,SAAUb,EACVc,OAAQf,EACR3G,GAAG,OACH4H,KAAK,IACLD,IAAK5B,OAGTpG,cAAA,OAAKJ,UAAWC,IAAQV,QAAQY,SAC9BC,cAAA,UAAQsF,KAAK,SAAS1F,UAAU,MAAMsI,UAAWf,EAAUpH,SAAC,oBAOtE,EC5DeoI,EAzBE,WACf,IAAM5H,EAAWC,cACjB4H,EAA2DjG,IAApBkG,GAAtBD,EAAThG,UAAgBgG,EAAL5F,MAAmC4F,EAA5B1F,aACpB4F,EAAa,SAAClF,EAAMzB,GACxB,GAAIA,EAAO,CACT,IAAM2G,EAAa,CAAEjI,GAAIsB,EAAMzD,KAAM+B,OAAQmD,EAAKnD,OAAQlB,KAAMqE,EAAKrE,MACrEwB,EAASlC,EAASiK,IAClB/H,EAAS5B,IACX,CACF,EAcA,OAAOqB,cAACiG,EAAS,CAACyB,WAbM,SAACzH,EAAQlB,GAU/BsJ,EARe,CACb3E,IAAK6E,+DACL5E,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAM,CAAE5D,OAAQA,EAAQlB,KAAMA,IAERuJ,EAAWE,KAAK,KAAM,CAAEvI,SAAQlB,UACxDuJ,GACF,GAEF,E,kCCKeG,EAhCQ,WACrB,OACE9I,eAAA,OAAKC,UAAW8I,IAAOC,OAAO5I,SAAA,CAC5BC,cAAA,OAAKJ,UAAW8I,IAAOE,KAAK7I,SAAC,kBAC7BC,cAAA,OAAKJ,UAAW8I,IAAOG,IAAI9I,SACzBJ,eAAA,MAAAI,SAAA,CACEC,cAAA,MAAAD,SACEC,cAAC8I,IAAO,CACNlJ,UAAW,SAAAgD,GAAW,OAAAA,EAARmG,SACDL,IAAOM,YAASC,CAAS,EAEtC9I,GAAG,UAASJ,SACb,iBAKHC,cAAA,MAAAD,SACEC,cAAC8I,IAAO,CACNlJ,UAAW,SAAAsJ,GAAW,OAAAA,EAARH,SACDL,IAAOM,YAASC,CAAS,EAEtC9I,GAAG,aAAYJ,SAChB,yBAQb,ECnBeoJ,EAVA,WACb,OACExJ,eAAA,OAAKC,UAAW8I,IAAOU,KAAKrJ,SAAA,CAC1BC,cAACyI,EAAc,IACfzI,cAAA,OAAKJ,UAAW8I,IAAOW,UAAUtJ,SAC/BC,cAACsJ,IAAM,QAIf,E,oBCReC,GAHE,WACf,OAAOvJ,cAAA,OAAKJ,UAAW8I,KAAOc,SAASzJ,SAAC,mBAC1C,ECwEe0J,OA3Df,WACE,IAAMlJ,EAAWC,cACjBE,EAA4BE,mBAAS,IAAGC,EAAAC,YAAAJ,EAAA,GAAjCnB,EAAMsB,EAAA,GAAE6I,EAAS7I,EAAA,GACxBuH,EAEmCjG,IAApBwH,GAFEvB,EAAThG,UACDgG,EAAL5F,MAC4B4F,EAA5B1F,aACIkH,EAAS,CACblG,IAAK6E,gEAQPsB,qBAAU,WAORF,EAAgBC,GANE,SAACxG,GAAU,IAAD0G,EAAA,WAExB,IAAMnI,EAAKoI,wBAAA,GAAQ3G,EAAK4G,IAAI,IAAE,GAAMA,IACpCN,GAAU,SAAAnK,GAAM,SAAAa,OAAA6J,YAAQ1K,GAAM,CAAEoC,GAAK,GACvC,EAHA,IAAK,IAAMqI,KAAO5G,EAAI0G,GAIxB,GAIF,GAAG,IAEHD,qBAAU,YAjBQ,SAACtK,GAEjBgB,EAAS7B,EAAWa,IACpBgB,EAAS5B,IACX,CAakBuL,CAAU3K,EAAQ,GAAG,CAACA,IAExC,IAAM4K,EAASC,YAAoB,CACjC,CACEC,KAAM,IACNC,QAAStK,cAACuK,IAAQ,CAACpK,GAAG,aAExB,CACEkK,KAAM,IACNC,QAAStK,cAACmJ,EAAM,IAChBqB,aAAcxK,cAACuJ,GAAQ,IACvBxJ,SAAU,CACR,CACEsK,KAAM,UACNC,QAAStK,cAAC4B,EAAM,KAElB,CACEyI,KAAM,mBACNC,QAAStK,cAAC6B,EAAW,KAEvB,CACEwI,KAAM,YACNC,QAAStK,cAACmI,EAAQ,KAEpB,CAAEkC,KAAM,IAAKC,QAAStK,cAACuJ,GAAQ,SAKrC,OADAlF,QAAQC,IAAIjF,GACLW,cAACyK,IAAc,CAACN,OAAQA,GACjC,ECrEMO,GAAcC,SAASC,eAAe,QAC/BC,qBAAWH,IAEnBI,OAAO9K,cAAC+K,IAAQ,CAAC1L,MAAOA,EAAMU,SACjCC,cAACyJ,GAAG,M","file":"static/js/main.a7916090.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__3UhuF\",\"loading\":\"QuoteForm_loading__2X51W\",\"control\":\"QuoteForm_control__1pqUs\",\"actions\":\"QuoteForm_actions__1Higs\",\"error-text\":\"QuoteForm_error-text__35gLA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__1oQkl\",\"logo\":\"MainNavigation_logo__t-Wl6\",\"nav\":\"MainNavigation_nav__33Mx3\",\"active\":\"MainNavigation_active__2NdZs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"author\":\"QuoteDetail_author__22KfT\",\"item\":\"QuoteDetail_item__pvpWc\",\"text\":\"QuoteDetail_text__1TA1F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__1sVPH\",\"sorting\":\"QuoteList_sorting___EScB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__2Mb2E\",\"container\":\"Layout_container__1ICUu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__AE7DQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1vn8L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__2QGZg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notfound\":\"NotFound_notfound__36-TK\"};","import { createSlice, configureStore } from '@reduxjs/toolkit'\r\nexport const quotesSlice = createSlice({\r\n    name: 'quotes',\r\n    initialState: [],\r\n    reducers: {\r\n        addQuote: (state, action) => {\r\n            state.push(action.payload);\r\n        },\r\n        initQuotes: (state, action) => {\r\n            return action.payload;\r\n        },\r\n        sortQuotes: (state, action) => {\r\n            return state.sort((a, b) => a.text.localeCompare(b.text))\r\n        },\r\n        reverseQuotes: (state, action) => {\r\n            return state.reverse();\r\n        }\r\n\r\n    }\r\n})\r\n\r\nconst { actions, reducer } = quotesSlice;\r\n\r\nexport const { initQuotes, reverseQuotes, addQuote, sortQuotes } = actions;\r\nexport default reducer;","\r\nimport { configureStore } from '@reduxjs/toolkit'\r\nimport quotesReducer from './quotesSlice'\r\nconst store = configureStore({ reducer: { quotes: quotesReducer } })\r\nexport default store;","import classes from './QuoteItem.module.css';\r\nimport { Link } from 'react-router-dom';\r\nconst QuoteItem = (props) => {\r\n  return (\r\n    <li className={classes.item}>\r\n      <figure>\r\n        <blockquote>\r\n          <p>{props.text}</p>\r\n        </blockquote>\r\n        <figcaption>{props.author}</figcaption>\r\n      </figure>\r\n      <Link to={`/quotes/${props.id}`} className='btn'>\r\n        View Fullscreen\r\n      </Link>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default QuoteItem;\r\n","import { Fragment, useState } from 'react';\r\nimport { useParams, useNavigate, useSearchParams } from 'react-router-dom';\r\nimport QuoteItem from './QuoteItem';\r\nimport classes from './QuoteList.module.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport store from '../../store/store';\r\nimport { reverseQuotes } from '../../store/quotesSlice';\r\nconst QuoteList = (props) => {\r\n  const dispatch = useDispatch();\r\n  const quotes = useSelector(state => state.quotes)\r\n  const navigate = useNavigate();\r\n  const [sortAscending, setSortAscending] = useState(false);\r\n  const [sort, setSort] = useSearchParams({});\r\n  const sortHandler = () => {\r\n    // navigate(`/quotes?sort=${sortAscending ? 'asc' : 'desc'}`);\r\n    setSortAscending((preState) => !preState);\r\n    setSort({ sort: sortAscending ? 'asc' : 'desc' })\r\n    dispatch(reverseQuotes())\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className={classes.sorting}>\r\n        <button onClick={sortHandler}>\r\n          Sort {sortAscending ? 'Ascending' : 'Descending'}\r\n        </button>\r\n      </div>\r\n      <ul className={classes.list}>\r\n        {quotes.map((quote) => (\r\n          <QuoteItem\r\n            key={quote.id}\r\n            id={quote.id}\r\n            author={quote.author}\r\n            text={quote.text}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default QuoteList;\r\n","import QuoteList from './QuoteList';\r\nimport { Fragment } from 'react';\r\nconst Quotes = (props) => {\r\n\r\n  return (\r\n    <Fragment>\r\n      <QuoteList />\r\n    </Fragment>\r\n  );\r\n};\r\nexport default Quotes;\r\n","import classes from './QuoteDetail.module.css';\r\nimport { Fragment } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nconst QuoteDetail = () => {\r\n  const params = useParams();\r\n  const quotes = useSelector(state => state.quotes)\r\n  const quoteIndex = quotes.findIndex((quote) => quote.id === params.quoteId)\r\n\r\n  return (\r\n    <div className={classes.item}>\r\n      <div className={classes.author}>{quotes[quoteIndex].author}</div>\r\n      <div className={classes.text} >{quotes[quoteIndex].text}</div>\r\n    </div >\r\n  );\r\n};\r\nexport default QuoteDetail;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\n\r\nconst useHttp = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(false);\r\n\r\n  const sendRequest = useCallback(async (requestConfig, addTask) => {\r\n    setIsLoading(true);\r\n    try {\r\n      const response = await fetch(requestConfig.url, {\r\n        method: requestConfig.method ? requestConfig.method : 'GET',\r\n        headers: requestConfig.headers ? requestConfig.headers : {},\r\n        body: requestConfig.body ? JSON.stringify(requestConfig.body) : null,\r\n      });\r\n      if (!response.ok) {\r\n        setError(true);\r\n        throw new Error('Some thing went wrong');\r\n      }\r\n      const data = await response.json();\r\n      setIsLoading(false);\r\n      addTask(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n      setError(true);\r\n    }\r\n  }, []);\r\n  return {\r\n    isLoading,\r\n    error,\r\n    sendRequest,\r\n  };\r\n};\r\nexport default useHttp;\r\n","import classes from './Card.module.css';\r\n\r\nconst Card = (props) => {\r\n  return <div className={classes.card}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import classes from './LoadingSpinner.module.css';\r\n\r\nconst LoadingSpinner = () => {\r\n  return <div className={classes.spinner}></div>;\r\n}\r\n\r\nexport default LoadingSpinner;\r\n","import React, { useState, useReducer } from 'react';\r\nconst initialState = { value: '', isTouch: false };\r\n\r\nconst useInput = (validateValue) => {\r\n  const inputReducer = (state, action) => {\r\n    if (action.type === 'CHANGE') {\r\n      return { value: action.value, isTouch: state.isTouch };\r\n    }\r\n    if (action.type === 'BLUR') {\r\n      return { isTouch: true, value: state.value };\r\n    }\r\n    if (action.type === 'RESET') {\r\n      return { value: '', isTouch: false };\r\n    }\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(inputReducer, initialState);\r\n  const inputValid = validateValue(state.value);\r\n  const hasError = !inputValid && state.isTouch;\r\n  const inputChangeHandler = (event) => {\r\n    console.log('change');\r\n    dispatch({ type: 'CHANGE', value: event.target.value });\r\n  };\r\n  const inputBlurHandler = () => {\r\n    console.log('blur');\r\n    dispatch({ type: 'BLUR' });\r\n  };\r\n  const reset = () => {\r\n    dispatch({ type: 'RESET' });\r\n  };\r\n  return {\r\n    inputValue: state.value,\r\n    hasError,\r\n    inputValid: inputValid,\r\n    inputBlurHandler,\r\n    inputChangeHandler,\r\n    reset,\r\n  };\r\n};\r\nexport default useInput;\r\n","import { useRef } from 'react';\r\n\r\nimport Card from '../UI/Card';\r\nimport LoadingSpinner from '../UI/LoadingSpinner';\r\nimport classes from './QuoteForm.module.css';\r\nimport useInput from '../../hooks/use-input';\r\nconst inputValidate = (value) => value != '';\r\nconst QuoteForm = (props) => {\r\n  const authorInputRef = useRef();\r\n  const textInputRef = useRef();\r\n\r\n  const {\r\n    inputValue: authorInputValue,\r\n    hasError: authorHasError,\r\n    inputValid: authorValid,\r\n    inputBlurHandler: authorBlurHandler,\r\n    inputChangeHandler: authorChangeHandler,\r\n    reset: authorReset,\r\n  } = useInput(inputValidate);\r\n  const {\r\n    inputValue: textInputValue,\r\n    hasError: textHasError,\r\n    inputValid: textValid,\r\n    inputBlurHandler: textBlurHandler,\r\n    inputChangeHandler: textChangeHandler,\r\n    reset: textReset,\r\n  } = useInput(inputValidate);\r\n  let formValid = false;\r\n  if (authorValid && textValid) formValid = true;\r\n  function submitFormHandler(event) {\r\n    event.preventDefault();\r\n\r\n    const enteredAuthor = authorInputRef.current.value;\r\n    const enteredText = textInputRef.current.value;\r\n\r\n    // optional: Could validate here\r\n\r\n    props.onAddQuote(enteredAuthor, enteredText);\r\n    authorReset();\r\n    textReset();\r\n\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <form className={classes.form} onSubmit={submitFormHandler}>\r\n        {props.isLoading && (\r\n          <div className={classes.loading}>\r\n            <LoadingSpinner />\r\n          </div>\r\n        )}\r\n\r\n        <div className={classes.control}>\r\n          <label htmlFor='author'>Author</label>\r\n          {authorHasError && (\r\n            <div className={classes['error-text']}>You must enter author!</div>\r\n          )}\r\n          <input\r\n            value={authorInputValue}\r\n            onChange={authorChangeHandler}\r\n            onBlur={authorBlurHandler}\r\n            type='text'\r\n            id='author'\r\n            ref={authorInputRef}\r\n          />\r\n        </div>\r\n        <div className={classes.control}>\r\n          <label htmlFor='text'>Text</label>\r\n          {textHasError && (\r\n            <div className={classes['error-text']}>\r\n              You must enter some text!\r\n            </div>\r\n          )}\r\n          <textarea\r\n            value={textInputValue}\r\n            onChange={textChangeHandler}\r\n            onBlur={textBlurHandler}\r\n            id='text'\r\n            rows='5'\r\n            ref={textInputRef}\r\n          ></textarea>\r\n        </div>\r\n        <div className={classes.actions}>\r\n          <button type='submit' className='btn' disabled={!formValid}>\r\n            Add Quote\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default QuoteForm;\r\n","import useHttp from '../../hooks/use-http';\r\nimport QuoteForm from './QuoteForm';\r\n\r\nimport { addQuote, sortQuotes } from '../../store/quotesSlice'\r\nimport { useDispatch } from 'react-redux';\r\nconst NewQuote = () => {\r\n  const dispatch = useDispatch();\r\n  const { isLoading, error, sendRequest: addQuoteRequest } = useHttp();\r\n  const addedQuote = (data, quote) => {\r\n    if (quote) {\r\n      const addedQuote = { id: quote.name, author: data.author, text: data.text }\r\n      dispatch(addQuote(addedQuote))\r\n      dispatch(sortQuotes())\r\n    }\r\n  };\r\n  const addQuoteHandler = (author, text) => {\r\n\r\n    const config = {\r\n      url: process.env.REACT_APP_API_URL,\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: { author: author, text: text },\r\n    };\r\n    addQuoteRequest(config, addedQuote.bind(null, { author, text }));\r\n    addedQuote();\r\n  };\r\n  return <QuoteForm onAddQuote={addQuoteHandler} />;\r\n};\r\nexport default NewQuote;\r\n","import styles from './MainNavigation.module.css';\r\nimport { NavLink, Link } from 'react-router-dom';\r\nconst MainNavigation = () => {\r\n  return (\r\n    <div className={styles.header}>\r\n      <div className={styles.logo}>Greate Quotes</div>\r\n      <div className={styles.nav}>\r\n        <ul>\r\n          <li>\r\n            <NavLink\r\n              className={({ isActive }) =>\r\n                isActive ? styles.active : undefined\r\n              }\r\n              to='/quotes'\r\n            >\r\n              All Quotes\r\n            </NavLink>\r\n          </li>\r\n\r\n          <li>\r\n            <NavLink\r\n              className={({ isActive }) =>\r\n                isActive ? styles.active : undefined\r\n              }\r\n              to='/new-quote'\r\n            >\r\n              Add a Quote\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default MainNavigation;\r\n","import styles from './Layout.module.css';\r\nimport MainNavigation from './MainNavigation';\r\n\r\nimport { Outlet } from 'react-router-dom';\r\nconst Layout = () => {\r\n  return (\r\n    <div className={styles.main}>\r\n      <MainNavigation />\r\n      <div className={styles.container}>\r\n        <Outlet />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Layout;\r\n","import styles from './NotFound.module.css';\r\nimport MainNavigation from './layout/MainNavigation';\r\nconst NotFound = () => {\r\n  return <div className={styles.notfound}>Page not found!</div>;\r\n};\r\nexport default NotFound;\r\n","import Quotes from './components/quotes/Quotes';\r\nimport QuoteDetail from './components/quotes/QuoteDetail';\r\nimport NewQuote from './components/quotes/NewQuote';\r\nimport Layout from './components/layout/Layout';\r\nimport NotFound from './components/NotFound';\r\nimport useHttp from './hooks/use-http';\r\nimport { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  createBrowserRouter,\r\n  RouterProvider,\r\n  Navigate,\r\n  useParams,\r\n  useSearchParams\r\n} from 'react-router-dom';\r\nimport store from './store/store'\r\nimport { initQuotes, sortQuotes } from './store/quotesSlice'\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const [quotes, setQuotes] = useState([])\r\n  const { isLoading,\r\n    error,\r\n    sendRequest: getQuoteRequest } = useHttp();\r\n  const config = {\r\n    url: process.env.REACT_APP_API_URL,\r\n\r\n  };\r\n  const initState = (quotes) => {\r\n\r\n    dispatch(initQuotes(quotes))\r\n    dispatch(sortQuotes())\r\n  }\r\n  useEffect(() => {\r\n    const getQuotes = (data) => {\r\n      for (const key in data) {\r\n        const quote = { ...data[key], 'id': key }\r\n        setQuotes(quotes => [...quotes, quote])\r\n      }\r\n    }\r\n    getQuoteRequest(config, getQuotes);\r\n    // setQuotes(quotes => [...quotes].sort())\r\n\r\n  }, [])\r\n  // \r\n  useEffect(() => { initState(quotes) }, [quotes])\r\n\r\n  const router = createBrowserRouter([\r\n    {\r\n      path: '/',\r\n      element: <Navigate to='/quotes' />,\r\n    },\r\n    {\r\n      path: '/',\r\n      element: <Layout />,\r\n      errorElement: <NotFound />,\r\n      children: [\r\n        {\r\n          path: '/quotes',\r\n          element: <Quotes />,\r\n        },\r\n        {\r\n          path: '/quotes/:quoteId',\r\n          element: <QuoteDetail />,\r\n        },\r\n        {\r\n          path: 'new-quote',\r\n          element: <NewQuote />,\r\n        },\r\n        { path: '*', element: <NotFound /> },\r\n      ],\r\n    },\r\n  ]);\r\n  console.log(store)\r\n  return <RouterProvider router={router}></RouterProvider>\r\n}\r\n\r\nexport default App;\r\n","import { StrictMode } from \"react\";\r\nimport { createRoot } from \"react-dom/client\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store/store\";\r\nimport App from \"./App\";\r\nconst rootElement = document.getElementById(\"root\");\r\nconst root = createRoot(rootElement);\r\n\r\nroot.render(<Provider store={store}>\r\n  <App /></Provider>\r\n\r\n);"],"sourceRoot":""}