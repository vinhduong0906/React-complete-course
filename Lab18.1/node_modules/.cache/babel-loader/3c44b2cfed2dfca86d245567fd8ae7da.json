{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nconst useHttp = () => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const sendRequest = useCallback(async (requestConfig, addTask) => {\n    setIsLoading(true);\n    try {\n      const response = await fetch(requestConfig.url, {\n        method: requestConfig.method ? requestConfig.method : 'GET',\n        headers: requestConfig.headers ? requestConfig.headers : {},\n        body: requestConfig.body ? JSON.stringify(requestConfig.body) : null\n      });\n      if (!response.ok) {\n        setError(true);\n        throw new Error('Some thing went wrong');\n      }\n      const data = await response.json();\n      setIsLoading(false);\n      addTask(data);\n    } catch (error) {\n      console.log(error);\n      setError(true);\n    }\n  }, []);\n  return {\n    isLoading,\n    error,\n    sendRequest\n  };\n};\n_s(useHttp, \"kFoNtBIrcngg1fV4+/xGzrb1VGs=\");\nexport default useHttp;","map":{"version":3,"names":["React","useState","useEffect","useCallback","useHttp","_s","isLoading","setIsLoading","error","setError","sendRequest","requestConfig","addTask","response","fetch","url","method","headers","body","JSON","stringify","ok","Error","data","json","console","log"],"sources":["F:/Dev/React-complete-course/Lab18.1/src/hooks/use-http.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\n\r\nconst useHttp = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(false);\r\n\r\n  const sendRequest = useCallback(async (requestConfig, addTask) => {\r\n    setIsLoading(true);\r\n    try {\r\n      const response = await fetch(requestConfig.url, {\r\n        method: requestConfig.method ? requestConfig.method : 'GET',\r\n        headers: requestConfig.headers ? requestConfig.headers : {},\r\n        body: requestConfig.body ? JSON.stringify(requestConfig.body) : null,\r\n      });\r\n      if (!response.ok) {\r\n        setError(true);\r\n        throw new Error('Some thing went wrong');\r\n      }\r\n      const data = await response.json();\r\n      setIsLoading(false);\r\n      addTask(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n      setError(true);\r\n    }\r\n  }, []);\r\n  return {\r\n    isLoading,\r\n    error,\r\n    sendRequest,\r\n  };\r\n};\r\nexport default useHttp;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAE/D,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAEzC,MAAMS,WAAW,GAAGP,WAAW,CAAC,OAAOQ,aAAa,EAAEC,OAAO,KAAK;IAChEL,YAAY,CAAC,IAAI,CAAC;IAClB,IAAI;MACF,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAACH,aAAa,CAACI,GAAG,EAAE;QAC9CC,MAAM,EAAEL,aAAa,CAACK,MAAM,GAAGL,aAAa,CAACK,MAAM,GAAG,KAAK;QAC3DC,OAAO,EAAEN,aAAa,CAACM,OAAO,GAAGN,aAAa,CAACM,OAAO,GAAG,CAAC,CAAC;QAC3DC,IAAI,EAAEP,aAAa,CAACO,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACT,aAAa,CAACO,IAAI,CAAC,GAAG;MAClE,CAAC,CAAC;MACF,IAAI,CAACL,QAAQ,CAACQ,EAAE,EAAE;QAChBZ,QAAQ,CAAC,IAAI,CAAC;QACd,MAAM,IAAIa,KAAK,CAAC,uBAAuB,CAAC;MAC1C;MACA,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,EAAE;MAClCjB,YAAY,CAAC,KAAK,CAAC;MACnBK,OAAO,CAACW,IAAI,CAAC;IACf,CAAC,CAAC,OAAOf,KAAK,EAAE;MACdiB,OAAO,CAACC,GAAG,CAAClB,KAAK,CAAC;MAClBC,QAAQ,CAAC,IAAI,CAAC;IAChB;EACF,CAAC,EAAE,EAAE,CAAC;EACN,OAAO;IACLH,SAAS;IACTE,KAAK;IACLE;EACF,CAAC;AACH,CAAC;AAACL,EAAA,CA7BID,OAAO;AA8Bb,eAAeA,OAAO"},"metadata":{},"sourceType":"module"}