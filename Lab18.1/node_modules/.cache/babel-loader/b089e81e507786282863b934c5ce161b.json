{"ast":null,"code":"var _jsxFileName = \"/Users/vinhduong/react_projects_2020/Lab18.1/src/components/quotes/NewQuote.js\",\n  _s = $RefreshSig$();\nimport useHttp from '../../hooks/use-http';\nimport QuoteForm from './QuoteForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewQuote = () => {\n  _s();\n  const {\n    isLoading,\n    error,\n    sendRequest: addQuoteRequest\n  } = useHttp();\n  // const addedQuote = (quote) => {\n  //   console.log(quote);\n  // };\n  const addQuoteHandler = (author, text) => {\n    const config = {\n      url: process.env.REACT_APP_API_URL,\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: {\n        author: author,\n        text: text\n      }\n    };\n    addQuoteRequest(config, null);\n  };\n  return /*#__PURE__*/_jsxDEV(QuoteForm, {\n    onAddQuote: addQuoteHandler\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 10\n  }, this);\n};\n_s(NewQuote, \"3VofMSG/NbtmOuX33CY9mQmrHbk=\", false, function () {\n  return [useHttp];\n});\n_c = NewQuote;\nexport default NewQuote;\nvar _c;\n$RefreshReg$(_c, \"NewQuote\");","map":{"version":3,"names":["useHttp","QuoteForm","jsxDEV","_jsxDEV","NewQuote","_s","isLoading","error","sendRequest","addQuoteRequest","addQuoteHandler","author","text","config","url","process","env","REACT_APP_API_URL","method","headers","body","onAddQuote","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/vinhduong/react_projects_2020/Lab18.1/src/components/quotes/NewQuote.js"],"sourcesContent":["import useHttp from '../../hooks/use-http';\nimport QuoteForm from './QuoteForm';\n\nconst NewQuote = () => {\n  const { isLoading, error, sendRequest: addQuoteRequest } = useHttp();\n  // const addedQuote = (quote) => {\n  //   console.log(quote);\n  // };\n  const addQuoteHandler = (author, text) => {\n    const config = {\n      url: process.env.REACT_APP_API_URL,\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: { author: author, text: text },\n    };\n    addQuoteRequest(config, null);\n  };\n  return <QuoteForm onAddQuote={addQuoteHandler} />;\n};\nexport default NewQuote;\n"],"mappings":";;AAAA,OAAOA,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM;IAAEC,SAAS;IAAEC,KAAK;IAAEC,WAAW,EAAEC;EAAgB,CAAC,GAAGT,OAAO,EAAE;EACpE;EACA;EACA;EACA,MAAMU,eAAe,GAAGA,CAACC,MAAM,EAAEC,IAAI,KAAK;IACxC,MAAMC,MAAM,GAAG;MACbC,GAAG,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB;MAClCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAE;QAAET,MAAM,EAAEA,MAAM;QAAEC,IAAI,EAAEA;MAAK;IACrC,CAAC;IACDH,eAAe,CAACI,MAAM,EAAE,IAAI,CAAC;EAC/B,CAAC;EACD,oBAAOV,OAAA,CAACF,SAAS;IAACoB,UAAU,EAAEX;EAAgB;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;AACnD,CAAC;AAACpB,EAAA,CAjBID,QAAQ;EAAA,QAC+CJ,OAAO;AAAA;AAAA0B,EAAA,GAD9DtB,QAAQ;AAkBd,eAAeA,QAAQ;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}