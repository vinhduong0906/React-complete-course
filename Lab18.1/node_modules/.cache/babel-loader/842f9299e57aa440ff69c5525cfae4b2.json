{"ast":null,"code":"var _jsxFileName = \"F:\\\\Dev\\\\React-complete-course\\\\Lab18.1\\\\src\\\\components\\\\quotes\\\\QuoteForm.js\",\n  _s = $RefreshSig$();\nimport { useRef } from 'react';\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\nimport useInput from '../../hooks/use-input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst inputValidate = value => value != '';\nconst QuoteForm = props => {\n  _s();\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n  const {\n    hasError: authorHasError,\n    inputValid: authorValid,\n    inputBlurHandler: authorBlurHandler,\n    inputChangeHandler: authorChangeHandler,\n    reset: authorReset\n  } = useInput(inputValidate);\n  const {\n    hasError: textHasError,\n    inputValid: textValid,\n    inputBlurHandler: textBlurHandler,\n    inputChangeHandler: textChangeHandler,\n    reset: textReset\n  } = useInput(inputValidate);\n  let formValid = false;\n  if (authorValid && textValid) formValid = true;\n  function submitFormHandler(event) {\n    event.preventDefault();\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({\n      author: enteredAuthor,\n      text: enteredText\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      onSubmit: submitFormHandler,\n      children: [props.isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.loading,\n        children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"author\",\n          children: \"Author\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), authorHasError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes['error-text'],\n          children: \"You must enter author!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: authorChangeHandler,\n          onBlur: authorBlurHandler,\n          type: \"text\",\n          id: \"author\",\n          ref: authorInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"text\",\n          children: \"Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), textHasError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes['error-text'],\n          children: \"You must enter some text!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          onChange: textChangeHandler,\n          onBlur: textBlurHandler,\n          id: \"text\",\n          rows: \"5\",\n          ref: textInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn\",\n          disabled: !formValid,\n          children: \"Add Quote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(QuoteForm, \"3ewfEGGcfAAFNTrJHyVTOhYfXuM=\", false, function () {\n  return [useInput, useInput];\n});\n_c = QuoteForm;\nexport default QuoteForm;\nvar _c;\n$RefreshReg$(_c, \"QuoteForm\");","map":{"version":3,"names":["useRef","Card","LoadingSpinner","classes","useInput","jsxDEV","_jsxDEV","inputValidate","value","QuoteForm","props","_s","authorInputRef","textInputRef","hasError","authorHasError","inputValid","authorValid","inputBlurHandler","authorBlurHandler","inputChangeHandler","authorChangeHandler","reset","authorReset","textHasError","textValid","textBlurHandler","textChangeHandler","textReset","formValid","submitFormHandler","event","preventDefault","enteredAuthor","current","enteredText","onAddQuote","author","text","children","className","form","onSubmit","isLoading","loading","fileName","_jsxFileName","lineNumber","columnNumber","control","htmlFor","onChange","onBlur","type","id","ref","rows","actions","disabled","_c","$RefreshReg$"],"sources":["F:/Dev/React-complete-course/Lab18.1/src/components/quotes/QuoteForm.js"],"sourcesContent":["import { useRef } from 'react';\r\n\r\nimport Card from '../UI/Card';\r\nimport LoadingSpinner from '../UI/LoadingSpinner';\r\nimport classes from './QuoteForm.module.css';\r\nimport useInput from '../../hooks/use-input';\r\nconst inputValidate = (value) => value != '';\r\nconst QuoteForm = (props) => {\r\n  const authorInputRef = useRef();\r\n  const textInputRef = useRef();\r\n\r\n  const {\r\n    hasError: authorHasError,\r\n    inputValid: authorValid,\r\n    inputBlurHandler: authorBlurHandler,\r\n    inputChangeHandler: authorChangeHandler,\r\n    reset: authorReset,\r\n  } = useInput(inputValidate);\r\n  const {\r\n    hasError: textHasError,\r\n    inputValid: textValid,\r\n    inputBlurHandler: textBlurHandler,\r\n    inputChangeHandler: textChangeHandler,\r\n    reset: textReset,\r\n  } = useInput(inputValidate);\r\n  let formValid = false;\r\n  if (authorValid && textValid) formValid = true;\r\n  function submitFormHandler(event) {\r\n    event.preventDefault();\r\n\r\n    const enteredAuthor = authorInputRef.current.value;\r\n    const enteredText = textInputRef.current.value;\r\n\r\n    // optional: Could validate here\r\n\r\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <form className={classes.form} onSubmit={submitFormHandler}>\r\n        {props.isLoading && (\r\n          <div className={classes.loading}>\r\n            <LoadingSpinner />\r\n          </div>\r\n        )}\r\n\r\n        <div className={classes.control}>\r\n          <label htmlFor='author'>Author</label>\r\n          {authorHasError && (\r\n            <div className={classes['error-text']}>You must enter author!</div>\r\n          )}\r\n          <input\r\n            onChange={authorChangeHandler}\r\n            onBlur={authorBlurHandler}\r\n            type='text'\r\n            id='author'\r\n            ref={authorInputRef}\r\n          />\r\n        </div>\r\n        <div className={classes.control}>\r\n          <label htmlFor='text'>Text</label>\r\n          {textHasError && (\r\n            <div className={classes['error-text']}>\r\n              You must enter some text!\r\n            </div>\r\n          )}\r\n          <textarea\r\n            onChange={textChangeHandler}\r\n            onBlur={textBlurHandler}\r\n            id='text'\r\n            rows='5'\r\n            ref={textInputRef}\r\n          ></textarea>\r\n        </div>\r\n        <div className={classes.actions}>\r\n          <button type='submit' className='btn' disabled={!formValid}>\r\n            Add Quote\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default QuoteForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}