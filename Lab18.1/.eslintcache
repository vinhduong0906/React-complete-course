[{"F:\\Dev\\React-complete-course\\Lab18.1\\src\\index.js":"1","F:\\Dev\\React-complete-course\\Lab18.1\\src\\App.js":"2","F:\\Dev\\React-complete-course\\Lab18.1\\src\\components\\quotes\\Quotes.js":"3","F:\\Dev\\React-complete-course\\Lab18.1\\src\\components\\NotFound.js":"4","F:\\Dev\\React-complete-course\\Lab18.1\\src\\components\\layout\\Layout.js":"5","F:\\Dev\\React-complete-course\\Lab18.1\\src\\components\\quotes\\QuoteDetail.js":"6","F:\\Dev\\React-complete-course\\Lab18.1\\src\\components\\quotes\\NewQuote.js":"7","F:\\Dev\\React-complete-course\\Lab18.1\\src\\components\\layout\\MainNavigation.js":"8","F:\\Dev\\React-complete-course\\Lab18.1\\src\\hooks\\use-http.js":"9","F:\\Dev\\React-complete-course\\Lab18.1\\src\\components\\quotes\\QuoteList.js":"10","F:\\Dev\\React-complete-course\\Lab18.1\\src\\components\\quotes\\QuoteForm.js":"11","F:\\Dev\\React-complete-course\\Lab18.1\\src\\components\\quotes\\QuoteItem.js":"12","F:\\Dev\\React-complete-course\\Lab18.1\\src\\components\\UI\\LoadingSpinner.js":"13","F:\\Dev\\React-complete-course\\Lab18.1\\src\\components\\UI\\Card.js":"14","F:\\Dev\\React-complete-course\\Lab18.1\\src\\hooks\\use-input.js":"15","F:\\Dev\\React-complete-course\\Lab18.1\\src\\store\\store.js":"16","F:\\Dev\\React-complete-course\\Lab18.1\\src\\store\\quotesSlice.js":"17"},{"size":347,"mtime":1683338197785,"results":"18","hashOfConfig":"19"},{"size":2018,"mtime":1683358444274,"results":"20","hashOfConfig":"19"},{"size":204,"mtime":1683360167609,"results":"21","hashOfConfig":"19"},{"size":222,"mtime":1682697165466,"results":"22","hashOfConfig":"19"},{"size":356,"mtime":1682697165469,"results":"23","hashOfConfig":"19"},{"size":612,"mtime":1683360065793,"results":"24","hashOfConfig":"19"},{"size":993,"mtime":1683358209407,"results":"25","hashOfConfig":"19"},{"size":904,"mtime":1682697165469,"results":"26","hashOfConfig":"19"},{"size":978,"mtime":1682697165472,"results":"27","hashOfConfig":"19"},{"size":1381,"mtime":1683342474923,"results":"28","hashOfConfig":"19"},{"size":2702,"mtime":1683342465587,"results":"29","hashOfConfig":"19"},{"size":473,"mtime":1683358470521,"results":"30","hashOfConfig":"19"},{"size":174,"mtime":1682697165467,"results":"31","hashOfConfig":"19"},{"size":163,"mtime":1682697165467,"results":"32","hashOfConfig":"19"},{"size":1147,"mtime":1682697165473,"results":"33","hashOfConfig":"19"},{"size":187,"mtime":1683339435391,"results":"34","hashOfConfig":"19"},{"size":728,"mtime":1683358143692,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},"nf282x",{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"47"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"47"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"47"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"47"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"47"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},"F:\\Dev\\React-complete-course\\Lab18.1\\src\\index.js",["82"],"import { StrictMode } from \"react\";\r\nimport { createRoot } from \"react-dom/client\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store/store\";\r\nimport App from \"./App\";\r\nconst rootElement = document.getElementById(\"root\");\r\nconst root = createRoot(rootElement);\r\n\r\nroot.render(<Provider store={store}>\r\n  <App /></Provider>\r\n\r\n);","F:\\Dev\\React-complete-course\\Lab18.1\\src\\App.js",["83","84","85","86","87","88","89"],"import Quotes from './components/quotes/Quotes';\r\nimport QuoteDetail from './components/quotes/QuoteDetail';\r\nimport NewQuote from './components/quotes/NewQuote';\r\nimport Layout from './components/layout/Layout';\r\nimport NotFound from './components/NotFound';\r\nimport useHttp from './hooks/use-http';\r\nimport { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  createBrowserRouter,\r\n  RouterProvider,\r\n  Navigate,\r\n  useParams,\r\n  useSearchParams\r\n} from 'react-router-dom';\r\nimport store from './store/store'\r\nimport { initQuotes, sortQuotes } from './store/quotesSlice'\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const [quotes, setQuotes] = useState([])\r\n  const { isLoading,\r\n    error,\r\n    sendRequest: getQuoteRequest } = useHttp();\r\n  const config = {\r\n    url: process.env.REACT_APP_API_URL,\r\n\r\n  };\r\n  const initState = (quotes) => {\r\n\r\n    dispatch(initQuotes(quotes))\r\n    dispatch(sortQuotes())\r\n  }\r\n  useEffect(() => {\r\n    const getQuotes = (data) => {\r\n      for (const key in data) {\r\n        const quote = { ...data[key], 'id': key }\r\n        setQuotes(quotes => [...quotes, quote])\r\n      }\r\n    }\r\n    getQuoteRequest(config, getQuotes);\r\n    // setQuotes(quotes => [...quotes].sort())\r\n\r\n  }, [])\r\n  // \r\n  useEffect(() => { initState(quotes) }, [quotes])\r\n\r\n  const router = createBrowserRouter([\r\n    {\r\n      path: '/',\r\n      element: <Navigate to='/quotes' />,\r\n    },\r\n    {\r\n      path: '/',\r\n      element: <Layout />,\r\n      errorElement: <NotFound />,\r\n      children: [\r\n        {\r\n          path: '/quotes',\r\n          element: <Quotes />,\r\n        },\r\n        {\r\n          path: '/quotes/:quoteId',\r\n          element: <QuoteDetail />,\r\n        },\r\n        {\r\n          path: 'new-quote',\r\n          element: <NewQuote />,\r\n        },\r\n        { path: '*', element: <NotFound /> },\r\n      ],\r\n    },\r\n  ]);\r\n  console.log(store)\r\n  return <RouterProvider router={router}></RouterProvider>\r\n}\r\n\r\nexport default App;\r\n","F:\\Dev\\React-complete-course\\Lab18.1\\src\\components\\quotes\\Quotes.js",[],"F:\\Dev\\React-complete-course\\Lab18.1\\src\\components\\NotFound.js",["90"],"import styles from './NotFound.module.css';\r\nimport MainNavigation from './layout/MainNavigation';\r\nconst NotFound = () => {\r\n  return <div className={styles.notfound}>Page not found!</div>;\r\n};\r\nexport default NotFound;\r\n",["91","92"],"F:\\Dev\\React-complete-course\\Lab18.1\\src\\components\\layout\\Layout.js",[],"F:\\Dev\\React-complete-course\\Lab18.1\\src\\components\\quotes\\QuoteDetail.js",["93"],"import classes from './QuoteDetail.module.css';\r\nimport { Fragment } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nconst QuoteDetail = () => {\r\n  const params = useParams();\r\n  const quotes = useSelector(state => state.quotes)\r\n  const quoteIndex = quotes.findIndex((quote) => quote.id === params.quoteId)\r\n\r\n  return (\r\n    <div className={classes.item}>\r\n      <div className={classes.author}>{quotes[quoteIndex].author}</div>\r\n      <div className={classes.text} >{quotes[quoteIndex].text}</div>\r\n    </div >\r\n  );\r\n};\r\nexport default QuoteDetail;\r\n","F:\\Dev\\React-complete-course\\Lab18.1\\src\\components\\quotes\\NewQuote.js",["94","95"],"import useHttp from '../../hooks/use-http';\r\nimport QuoteForm from './QuoteForm';\r\n\r\nimport { addQuote, sortQuotes } from '../../store/quotesSlice'\r\nimport { useDispatch } from 'react-redux';\r\nconst NewQuote = () => {\r\n  const dispatch = useDispatch();\r\n  const { isLoading, error, sendRequest: addQuoteRequest } = useHttp();\r\n  const addedQuote = (data, quote) => {\r\n    if (quote) {\r\n      const addedQuote = { id: quote.name, author: data.author, text: data.text }\r\n      dispatch(addQuote(addedQuote))\r\n      dispatch(sortQuotes())\r\n    }\r\n  };\r\n  const addQuoteHandler = (author, text) => {\r\n\r\n    const config = {\r\n      url: process.env.REACT_APP_API_URL,\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: { author: author, text: text },\r\n    };\r\n    addQuoteRequest(config, addedQuote.bind(null, { author, text }));\r\n    addedQuote();\r\n  };\r\n  return <QuoteForm onAddQuote={addQuoteHandler} />;\r\n};\r\nexport default NewQuote;\r\n","F:\\Dev\\React-complete-course\\Lab18.1\\src\\components\\layout\\MainNavigation.js",["96"],"import styles from './MainNavigation.module.css';\r\nimport { NavLink, Link } from 'react-router-dom';\r\nconst MainNavigation = () => {\r\n  return (\r\n    <div className={styles.header}>\r\n      <div className={styles.logo}>Greate Quotes</div>\r\n      <div className={styles.nav}>\r\n        <ul>\r\n          <li>\r\n            <NavLink\r\n              className={({ isActive }) =>\r\n                isActive ? styles.active : undefined\r\n              }\r\n              to='/quotes'\r\n            >\r\n              All Quotes\r\n            </NavLink>\r\n          </li>\r\n\r\n          <li>\r\n            <NavLink\r\n              className={({ isActive }) =>\r\n                isActive ? styles.active : undefined\r\n              }\r\n              to='/new-quote'\r\n            >\r\n              Add a Quote\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default MainNavigation;\r\n","F:\\Dev\\React-complete-course\\Lab18.1\\src\\hooks\\use-http.js",["97","98"],"import React, { useState, useEffect, useCallback } from 'react';\r\n\r\nconst useHttp = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(false);\r\n\r\n  const sendRequest = useCallback(async (requestConfig, addTask) => {\r\n    setIsLoading(true);\r\n    try {\r\n      const response = await fetch(requestConfig.url, {\r\n        method: requestConfig.method ? requestConfig.method : 'GET',\r\n        headers: requestConfig.headers ? requestConfig.headers : {},\r\n        body: requestConfig.body ? JSON.stringify(requestConfig.body) : null,\r\n      });\r\n      if (!response.ok) {\r\n        setError(true);\r\n        throw new Error('Some thing went wrong');\r\n      }\r\n      const data = await response.json();\r\n      setIsLoading(false);\r\n      addTask(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n      setError(true);\r\n    }\r\n  }, []);\r\n  return {\r\n    isLoading,\r\n    error,\r\n    sendRequest,\r\n  };\r\n};\r\nexport default useHttp;\r\n","F:\\Dev\\React-complete-course\\Lab18.1\\src\\components\\quotes\\QuoteList.js",["99","100","101","102"],"import { Fragment, useState } from 'react';\r\nimport { useParams, useNavigate, useSearchParams } from 'react-router-dom';\r\nimport QuoteItem from './QuoteItem';\r\nimport classes from './QuoteList.module.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport store from '../../store/store';\r\nimport { reverseQuotes } from '../../store/quotesSlice';\r\nconst QuoteList = (props) => {\r\n  const dispatch = useDispatch();\r\n  const quotes = useSelector(state => state.quotes)\r\n  const navigate = useNavigate();\r\n  const [sortAscending, setSortAscending] = useState(false);\r\n  const [sort, setSort] = useSearchParams({});\r\n  const sortHandler = () => {\r\n    // navigate(`/quotes?sort=${sortAscending ? 'asc' : 'desc'}`);\r\n    setSortAscending((preState) => !preState);\r\n    setSort({ sort: sortAscending ? 'asc' : 'desc' })\r\n    dispatch(reverseQuotes())\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className={classes.sorting}>\r\n        <button onClick={sortHandler}>\r\n          Sort {sortAscending ? 'Ascending' : 'Descending'}\r\n        </button>\r\n      </div>\r\n      <ul className={classes.list}>\r\n        {quotes.map((quote) => (\r\n          <QuoteItem\r\n            key={quote.id}\r\n            id={quote.id}\r\n            author={quote.author}\r\n            text={quote.text}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default QuoteList;\r\n","F:\\Dev\\React-complete-course\\Lab18.1\\src\\components\\quotes\\QuoteForm.js",["103"],"import { useRef } from 'react';\r\n\r\nimport Card from '../UI/Card';\r\nimport LoadingSpinner from '../UI/LoadingSpinner';\r\nimport classes from './QuoteForm.module.css';\r\nimport useInput from '../../hooks/use-input';\r\nconst inputValidate = (value) => value != '';\r\nconst QuoteForm = (props) => {\r\n  const authorInputRef = useRef();\r\n  const textInputRef = useRef();\r\n\r\n  const {\r\n    inputValue: authorInputValue,\r\n    hasError: authorHasError,\r\n    inputValid: authorValid,\r\n    inputBlurHandler: authorBlurHandler,\r\n    inputChangeHandler: authorChangeHandler,\r\n    reset: authorReset,\r\n  } = useInput(inputValidate);\r\n  const {\r\n    inputValue: textInputValue,\r\n    hasError: textHasError,\r\n    inputValid: textValid,\r\n    inputBlurHandler: textBlurHandler,\r\n    inputChangeHandler: textChangeHandler,\r\n    reset: textReset,\r\n  } = useInput(inputValidate);\r\n  let formValid = false;\r\n  if (authorValid && textValid) formValid = true;\r\n  function submitFormHandler(event) {\r\n    event.preventDefault();\r\n\r\n    const enteredAuthor = authorInputRef.current.value;\r\n    const enteredText = textInputRef.current.value;\r\n\r\n    // optional: Could validate here\r\n\r\n    props.onAddQuote(enteredAuthor, enteredText);\r\n    authorReset();\r\n    textReset();\r\n\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <form className={classes.form} onSubmit={submitFormHandler}>\r\n        {props.isLoading && (\r\n          <div className={classes.loading}>\r\n            <LoadingSpinner />\r\n          </div>\r\n        )}\r\n\r\n        <div className={classes.control}>\r\n          <label htmlFor='author'>Author</label>\r\n          {authorHasError && (\r\n            <div className={classes['error-text']}>You must enter author!</div>\r\n          )}\r\n          <input\r\n            value={authorInputValue}\r\n            onChange={authorChangeHandler}\r\n            onBlur={authorBlurHandler}\r\n            type='text'\r\n            id='author'\r\n            ref={authorInputRef}\r\n          />\r\n        </div>\r\n        <div className={classes.control}>\r\n          <label htmlFor='text'>Text</label>\r\n          {textHasError && (\r\n            <div className={classes['error-text']}>\r\n              You must enter some text!\r\n            </div>\r\n          )}\r\n          <textarea\r\n            value={textInputValue}\r\n            onChange={textChangeHandler}\r\n            onBlur={textBlurHandler}\r\n            id='text'\r\n            rows='5'\r\n            ref={textInputRef}\r\n          ></textarea>\r\n        </div>\r\n        <div className={classes.actions}>\r\n          <button type='submit' className='btn' disabled={!formValid}>\r\n            Add Quote\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default QuoteForm;\r\n","F:\\Dev\\React-complete-course\\Lab18.1\\src\\components\\quotes\\QuoteItem.js",[],"F:\\Dev\\React-complete-course\\Lab18.1\\src\\components\\UI\\LoadingSpinner.js",[],"F:\\Dev\\React-complete-course\\Lab18.1\\src\\components\\UI\\Card.js",[],"F:\\Dev\\React-complete-course\\Lab18.1\\src\\hooks\\use-input.js",["104","105"],"import React, { useState, useReducer } from 'react';\r\nconst initialState = { value: '', isTouch: false };\r\n\r\nconst useInput = (validateValue) => {\r\n  const inputReducer = (state, action) => {\r\n    if (action.type === 'CHANGE') {\r\n      return { value: action.value, isTouch: state.isTouch };\r\n    }\r\n    if (action.type === 'BLUR') {\r\n      return { isTouch: true, value: state.value };\r\n    }\r\n    if (action.type === 'RESET') {\r\n      return { value: '', isTouch: false };\r\n    }\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(inputReducer, initialState);\r\n  const inputValid = validateValue(state.value);\r\n  const hasError = !inputValid && state.isTouch;\r\n  const inputChangeHandler = (event) => {\r\n    console.log('change');\r\n    dispatch({ type: 'CHANGE', value: event.target.value });\r\n  };\r\n  const inputBlurHandler = () => {\r\n    console.log('blur');\r\n    dispatch({ type: 'BLUR' });\r\n  };\r\n  const reset = () => {\r\n    dispatch({ type: 'RESET' });\r\n  };\r\n  return {\r\n    inputValue: state.value,\r\n    hasError,\r\n    inputValid: inputValid,\r\n    inputBlurHandler,\r\n    inputChangeHandler,\r\n    reset,\r\n  };\r\n};\r\nexport default useInput;\r\n","F:\\Dev\\React-complete-course\\Lab18.1\\src\\store\\store.js",[],"F:\\Dev\\React-complete-course\\Lab18.1\\src\\store\\quotesSlice.js",["106"],"import { createSlice, configureStore } from '@reduxjs/toolkit'\r\nexport const quotesSlice = createSlice({\r\n    name: 'quotes',\r\n    initialState: [],\r\n    reducers: {\r\n        addQuote: (state, action) => {\r\n            state.push(action.payload);\r\n        },\r\n        initQuotes: (state, action) => {\r\n            return action.payload;\r\n        },\r\n        sortQuotes: (state, action) => {\r\n            return state.sort((a, b) => a.text.localeCompare(b.text))\r\n        },\r\n        reverseQuotes: (state, action) => {\r\n            return state.reverse();\r\n        }\r\n\r\n    }\r\n})\r\n\r\nconst { actions, reducer } = quotesSlice;\r\n\r\nexport const { initQuotes, reverseQuotes, addQuote, sortQuotes } = actions;\r\nexport default reducer;",{"ruleId":"107","severity":1,"message":"108","line":1,"column":10,"nodeType":"109","messageId":"110","endLine":1,"endColumn":20},{"ruleId":"107","severity":1,"message":"111","line":8,"column":23,"nodeType":"109","messageId":"110","endLine":8,"endColumn":34},{"ruleId":"107","severity":1,"message":"112","line":13,"column":3,"nodeType":"109","messageId":"110","endLine":13,"endColumn":12},{"ruleId":"107","severity":1,"message":"113","line":14,"column":3,"nodeType":"109","messageId":"110","endLine":14,"endColumn":18},{"ruleId":"107","severity":1,"message":"114","line":21,"column":11,"nodeType":"109","messageId":"110","endLine":21,"endColumn":20},{"ruleId":"107","severity":1,"message":"115","line":22,"column":5,"nodeType":"109","messageId":"110","endLine":22,"endColumn":10},{"ruleId":"116","severity":1,"message":"117","line":43,"column":6,"nodeType":"118","endLine":43,"endColumn":8,"suggestions":"119"},{"ruleId":"116","severity":1,"message":"120","line":45,"column":42,"nodeType":"118","endLine":45,"endColumn":50,"suggestions":"121"},{"ruleId":"107","severity":1,"message":"122","line":2,"column":8,"nodeType":"109","messageId":"110","endLine":2,"endColumn":22},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"107","severity":1,"message":"127","line":2,"column":10,"nodeType":"109","messageId":"110","endLine":2,"endColumn":18},{"ruleId":"107","severity":1,"message":"114","line":8,"column":11,"nodeType":"109","messageId":"110","endLine":8,"endColumn":20},{"ruleId":"107","severity":1,"message":"115","line":8,"column":22,"nodeType":"109","messageId":"110","endLine":8,"endColumn":27},{"ruleId":"107","severity":1,"message":"128","line":2,"column":19,"nodeType":"109","messageId":"110","endLine":2,"endColumn":23},{"ruleId":"107","severity":1,"message":"129","line":1,"column":8,"nodeType":"109","messageId":"110","endLine":1,"endColumn":13},{"ruleId":"107","severity":1,"message":"130","line":1,"column":27,"nodeType":"109","messageId":"110","endLine":1,"endColumn":36},{"ruleId":"107","severity":1,"message":"112","line":2,"column":10,"nodeType":"109","messageId":"110","endLine":2,"endColumn":19},{"ruleId":"107","severity":1,"message":"131","line":6,"column":8,"nodeType":"109","messageId":"110","endLine":6,"endColumn":13},{"ruleId":"107","severity":1,"message":"132","line":11,"column":9,"nodeType":"109","messageId":"110","endLine":11,"endColumn":17},{"ruleId":"107","severity":1,"message":"133","line":13,"column":10,"nodeType":"109","messageId":"110","endLine":13,"endColumn":14},{"ruleId":"134","severity":1,"message":"135","line":7,"column":40,"nodeType":"136","messageId":"137","endLine":7,"endColumn":42},{"ruleId":"107","severity":1,"message":"129","line":1,"column":8,"nodeType":"109","messageId":"110","endLine":1,"endColumn":13},{"ruleId":"107","severity":1,"message":"138","line":1,"column":17,"nodeType":"109","messageId":"110","endLine":1,"endColumn":25},{"ruleId":"107","severity":1,"message":"139","line":1,"column":23,"nodeType":"109","messageId":"110","endLine":1,"endColumn":37},"no-unused-vars","'StrictMode' is defined but never used.","Identifier","unusedVar","'useSelector' is defined but never used.","'useParams' is defined but never used.","'useSearchParams' is defined but never used.","'isLoading' is assigned a value but never used.","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'config' and 'getQuoteRequest'. Either include them or remove the dependency array.","ArrayExpression",["140"],"React Hook useEffect has a missing dependency: 'initState'. Either include it or remove the dependency array.",["141"],"'MainNavigation' is defined but never used.","no-native-reassign",["142"],"no-negated-in-lhs",["143"],"'Fragment' is defined but never used.","'Link' is defined but never used.","'React' is defined but never used.","'useEffect' is defined but never used.","'store' is defined but never used.","'navigate' is assigned a value but never used.","'sort' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useState' is defined but never used.","'configureStore' is defined but never used.",{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [config, getQuoteRequest]",{"range":"148","text":"149"},"Update the dependencies array to be: [initState, quotes]",{"range":"150","text":"151"},[1282,1284],"[config, getQuoteRequest]",[1335,1343],"[initState, quotes]"]